{
  "contractName": "PRIVIPodERC20Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "podId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "podTokenName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "podTokenSymbol",
          "type": "string"
        }
      ],
      "name": "PodCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MODERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "bridgeManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "swapManagerAddress",
          "type": "address"
        }
      ],
      "name": "assignRoleSwapManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalTokenCreated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalPods",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "podId",
          "type": "string"
        }
      ],
      "name": "getPodAddressById",
      "outputs": [
        {
          "internalType": "address",
          "name": "podAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "name": "getPodAddressBySymbol",
      "outputs": [
        {
          "internalType": "address",
          "name": "podAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "podId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "podTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "podTokenSymbol",
          "type": "string"
        }
      ],
      "name": "createPod",
      "outputs": [
        {
          "internalType": "address",
          "name": "podAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "podId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "investAmount",
          "type": "uint256"
        }
      ],
      "name": "mintPodTokenById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "investAmount",
          "type": "uint256"
        }
      ],
      "name": "mintPodTokenBySymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"podId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"podTokenName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"podTokenSymbol\",\"type\":\"string\"}],\"name\":\"PodCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MODERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapManagerAddress\",\"type\":\"address\"}],\"name\":\"assignRoleSwapManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"podId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"podTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"podTokenSymbol\",\"type\":\"string\"}],\"name\":\"createPod\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"podAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"podId\",\"type\":\"string\"}],\"name\":\"getPodAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"podAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getPodAddressBySymbol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"podAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTokenCreated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPods\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"podId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investAmount\",\"type\":\"uint256\"}],\"name\":\"mintPodTokenById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investAmount\",\"type\":\"uint256\"}],\"name\":\"mintPodTokenBySymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"PRIVI*\",\"details\":\"Creates new ERC20 tokens using a factory pattern\",\"kind\":\"dev\",\"methods\":{\"assignRoleSwapManager(address)\":{\"params\":{\"swapManagerAddress\":\"The SwapManager contract address\"}},\"constructor\":{\"details\":\"- Grants `DEFAULT_ADMIN_ROLE` and `MODERATOR_ROLE` to the   account that deploys the contract - Assigns the bridgeManager address\"},\"createPod(string,string,string)\":{\"details\":\"- Pod id must not exist         - Pod name & symbol must not exist         - Pod name & symbol can't be empty         - Pod symbol can't be greater than 25 characters\",\"params\":{\"podId\":\"The Pod token identifier\",\"podTokenName\":\"The Pod token name\",\"podTokenSymbol\":\"The Pod token symbol (ticker)\"},\"returns\":{\"podAddress\":\"The contract address of the Pod token created\"}},\"getPodAddressById(string)\":{\"params\":{\"podId\":\"The Pod token identifier\"},\"returns\":{\"podAddress\":\"The contract address of the Pod token\"}},\"getPodAddressBySymbol(string)\":{\"params\":{\"tokenSymbol\":\"The Pod token symbol (ticker)\"},\"returns\":{\"podAddress\":\"The contract address of the Pod token\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mintPodTokenById(string,address,uint256)\":{\"details\":\"- The caller must MODERATOR_ROLE         - `account` address can't be zero         - 'investAmount` must be greater than zero\",\"params\":{\"account\":\"The destination account to receive minted tokens\",\"investAmount\":\"The amount of tokens to be minted\",\"podId\":\"The Pod token identifier\"}},\"mintPodTokenBySymbol(string,address,uint256)\":{\"details\":\"- The caller must MODERATOR_ROLE         - `account` address can't be zero         - 'investAmount` must be greater than zero\",\"params\":{\"account\":\"The destination account to receive minted tokens\",\"investAmount\":\"The amount of tokens to be minted\",\"tokenSymbol\":\"The Pod token symbol (sticker)\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"PRIVIPodERC20Factory contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assignRoleSwapManager(address)\":{\"notice\":\"Assigns `MODERATOR_ROLE` to SwapManager contract\"},\"createPod(string,string,string)\":{\"notice\":\"Creates an ERC20 Pod token and registers it in the BridgeManager\"},\"getPodAddressById(string)\":{\"notice\":\"Returns the contract address of the Pod token\"},\"getPodAddressBySymbol(string)\":{\"notice\":\"Returns the contract address of the Pod token\"},\"getTotalTokenCreated()\":{\"notice\":\"Returns the total amount of Pod tokens created\"},\"mintPodTokenById(string,address,uint256)\":{\"notice\":\"Mints ERC20 Pod tokens\"},\"mintPodTokenBySymbol(string,address,uint256)\":{\"notice\":\"Mints ERC20 Pod tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/PRIVIPodERC20Factory.sol\":\"PRIVIPodERC20Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/PRIVIPodERC20Factory.sol\":{\"keccak256\":\"0x1c6c0def524fd876586eee3963e65e188d3b33d05bad734e75451834ac1dfef5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d5f2a1709c0a960ba4c892e673e6510a4ad4ad7406e1b0db3ad2faf4575f1c\",\"dweb:/ipfs/QmPuiJ5GZwJyLxmKn9mZRHGhPKydqXtJeGvsqT4G4pjSLY\"]},\"/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/interfaces/IBridgeManager.sol\":{\"keccak256\":\"0x05310847ff0e781ca355be47c3355441d539e2e30538133fad7e7d1e4de1ab1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e30c72f4b54ef59dc310a629dbde65e41156063ce09cdbb1336e632acfe9bd96\",\"dweb:/ipfs/QmXCWX4vhayxBV72DBiFZWjrgVbm73AwZYsYZGCck47oAD\"]},\"/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/token/PRIVIPodERC20Token.sol\":{\"keccak256\":\"0x6d2759fd49a5f1e9d76bd482f2e5736b7981fe21c0b8c81c4f6eb1f2d11fef79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc87eeb5ab3765bb62a510239cf5e55eb259603d96922ef4c73a2b3eea25b28\",\"dweb:/ipfs/QmezLt2ZjXLoBJs7NyFKskhZhyEvNTdG2A3hVfBZaztS5N\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200241338038062002413833981016040819052620000349162000166565b6200004a6000620000446200009f565b620000a3565b620000797f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f620000446200009f565b600180546001600160a01b0319166001600160a01b039290921691909117905562000196565b3390565b620000af8282620000b3565b5050565b620000bf82826200013d565b620000af576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000f96200009f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60006020828403121562000178578081fd5b81516001600160a01b03811681146200018f578182fd5b9392505050565b61226d80620001a66000396000f3fe60806040523480156200001157600080fd5b5060043610620001185760003560e01c8063532d9c4411620000a5578063a217fddf116200006f578063a217fddf146200024f578063b176d4ba1462000259578063d547741f1462000270578063e792b19414620002875762000118565b8063532d9c441462000200578063797669c914620002175780638d1909ed146200022157806391d1485414620002385762000118565b80632f2ff15d11620000e75780632f2ff15d14620001a25780633325a4e414620001bb57806336568abe14620001d2578063416aad1e14620001e95762000118565b806301ffc9a7146200011d5780630fc09e2e146200014c57806322b2edeb1462000165578063248a9ca3146200018b575b600080fd5b620001346200012e36600462000b1a565b62000291565b60405162000143919062000cef565b60405180910390f35b62000156620002c1565b60405162000143919062000cfa565b6200017c6200017636600462000b44565b620002c7565b60405162000143919062000cc2565b620001566200019c36600462000ad3565b620002fd565b620001b9620001b336600462000aec565b62000312565b005b6200017c620001cc36600462000b44565b62000363565b620001b9620001e336600462000aec565b62000379565b6200017c620001fa36600462000be8565b620003c2565b620001b96200021136600462000b88565b62000632565b6200015662000756565b620001b96200023236600462000aaf565b6200077a565b620001346200024936600462000aec565b620007f7565b6200015662000820565b620001b96200026a36600462000b88565b62000825565b620001b96200028136600462000aec565b620008d3565b6200017c62000901565b60006001600160e01b03198216637965db0b60e01b1480620002b95750620002b98262000910565b90505b919050565b60025490565b600060038383604051620002dd92919062000cb2565b908152604051908190036020019020546001600160a01b03169392505050565b60009081526020819052604090206001015490565b6200032b6200032183620002fd565b6200024962000929565b620003535760405162461bcd60e51b81526004016200034a9062000d80565b60405180910390fd5b6200035f82826200092d565b5050565b600060048383604051620002dd92919062000cb2565b6200038362000929565b6001600160a01b0316816001600160a01b031614620003b65760405162461bcd60e51b81526004016200034a9062001079565b6200035f8282620009b7565b6000806001600160a01b031660038888604051620003e292919062000cb2565b908152604051908190036020019020546001600160a01b0316146200041b5760405162461bcd60e51b81526004016200034a9062000fc3565b60006001600160a01b0316600484846040516200043a92919062000cb2565b908152604051908190036020019020546001600160a01b031614620004735760405162461bcd60e51b81526004016200034a9062000f09565b60008585858530604051620004889062000a3f565b6200049895949392919062000d39565b604051809103906000f080158015620004b5573d6000803e3d6000fd5b509050809150600160026000828254620004d09190620010d6565b925050819055508160038989604051620004ec92919062000cb2565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600485856040516200053392919062000cb2565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff1990911617905560015463374b216760e21b82529091169063dd2c859c906200059a908990899089908990899060040162000d39565b600060405180830381600087803b158015620005b557600080fd5b505af1158015620005ca573d6000803e3d6000fd5b505050508787604051620005e092919062000cb2565b60405180910390207fc0512f6474c9ee949f1cbdc88e43ca774f79b5f1f07d8484696e1cf1a0bd87ce878787876040516200061f949392919062000d03565b60405180910390a2509695505050505050565b620006617f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620006805760405162461bcd60e51b81526004016200034a906200100e565b6001600160a01b038216620006a95760405162461bcd60e51b81526004016200034a9062000f66565b60008111620006cc5760405162461bcd60e51b81526004016200034a9062000ddd565b60038484604051620006e092919062000cb2565b908152604051908190036020018120546340c10f1960e01b82526001600160a01b0316906340c10f19906200071c908590859060040162000cd6565b600060405180830381600087803b1580156200073757600080fd5b505af11580156200074c573d6000803e3d6000fd5b5050505050505050565b7f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f81565b620007a97f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620007c85760405162461bcd60e51b81526004016200034a9062000e97565b620007f47f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f8262000353565b50565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b620008547f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620008735760405162461bcd60e51b81526004016200034a906200100e565b6001600160a01b0382166200089c5760405162461bcd60e51b81526004016200034a9062000f66565b60008111620008bf5760405162461bcd60e51b81526004016200034a9062000ddd565b60048484604051620006e092919062000cb2565b620008e26200032183620002fd565b620003b65760405162461bcd60e51b81526004016200034a9062000e3a565b6001546001600160a01b031681565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b620009398282620007f7565b6200035f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200097362000929565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b620009c38282620007f7565b156200035f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055620009fb62000929565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61113c80620010fc83390190565b80356001600160a01b0381168114620002bc57600080fd5b60008083601f84011262000a77578182fd5b50813567ffffffffffffffff81111562000a8f578182fd5b60208301915083602082850101111562000aa857600080fd5b9250929050565b60006020828403121562000ac1578081fd5b62000acc8262000a4d565b9392505050565b60006020828403121562000ae5578081fd5b5035919050565b6000806040838503121562000aff578081fd5b8235915062000b116020840162000a4d565b90509250929050565b60006020828403121562000b2c578081fd5b81356001600160e01b03198116811462000acc578182fd5b6000806020838503121562000b57578182fd5b823567ffffffffffffffff81111562000b6e578283fd5b62000b7c8582860162000a65565b90969095509350505050565b6000806000806060858703121562000b9e578182fd5b843567ffffffffffffffff81111562000bb5578283fd5b62000bc38782880162000a65565b909550935062000bd890506020860162000a4d565b9396929550929360400135925050565b6000806000806000806060878903121562000c01578182fd5b863567ffffffffffffffff8082111562000c19578384fd5b62000c278a838b0162000a65565b9098509650602089013591508082111562000c40578384fd5b62000c4e8a838b0162000a65565b9096509450604089013591508082111562000c67578384fd5b5062000c7689828a0162000a65565b979a9699509497509295939492505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60006040825262000d1960408301868862000c88565b828103602084015262000d2e81858762000c88565b979650505050505050565b60006060825262000d4f60608301878962000c88565b828103602084015262000d6481868862000c88565b9150506001600160a01b03831660408301529695505050505050565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f206772616e740000000000000000000000000000000000606082015260800190565b60208082526035908201527f5052495649506f644552433230466163746f72793a20696e76657374416d6f7560408201527f6e742073686f756c64206e6f74206265207a65726f0000000000000000000000606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000606082015260800190565b6020808252604c908201527f5052495649506f644552433230466163746f72793a206d75737420686176652060408201527f4d4f44455241544f525f524f4c4520746f2061737369676e20537761704d616e60608201526b61676572206164647265737360a01b608082015260a00190565b6020808252602f908201527f5052495649506f644552433230466163746f72793a20506f642073796d626f6c60408201527f20616c7265616479206578697374730000000000000000000000000000000000606082015260800190565b60208082526038908201527f5052495649506f644552433230466163746f72793a204163636f756e7420616460408201527f64726573732073686f756c64206e6f74206265207a65726f0000000000000000606082015260800190565b6020808252602b908201527f5052495649506f644552433230466163746f72793a20506f6420696420616c7260408201526a656164792065786973747360a81b606082015260800190565b60208082526045908201527f5052495649506f644552433230466163746f72793a206d75737420686176652060408201527f4d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e7660608201526432b9ba37b960d91b608082015260a00190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60008219821115620010f657634e487b7160e01b81526011600452602481fd5b50019056fe60806040523480156200001157600080fd5b506040516200113c3803806200113c8339810160408190526200003491620001e1565b8251839083906200004d90600390602085019062000090565b5080516200006390600490602084019062000090565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620002bd915050565b8280546200009e906200026a565b90600052602060002090601f016020900481019282620000c257600085556200010d565b82601f10620000dd57805160ff19168380011785556200010d565b828001600101855582156200010d579182015b828111156200010d578251825591602001919060010190620000f0565b506200011b9291506200011f565b5090565b5b808211156200011b576000815560010162000120565b600082601f83011262000147578081fd5b81516001600160401b0380821115620001645762000164620002a7565b6040516020601f8401601f19168201810183811183821017156200018c576200018c620002a7565b6040528382528584018101871015620001a3578485fd5b8492505b83831015620001c65785830181015182840182015291820191620001a7565b83831115620001d757848185840101525b5095945050505050565b600080600060608486031215620001f6578283fd5b83516001600160401b03808211156200020d578485fd5b6200021b8783880162000136565b9450602086015191508082111562000231578384fd5b50620002408682870162000136565b604086015190935090506001600160a01b03811681146200025f578182fd5b809150509250925092565b6002810460018216806200027f57607f821691505b60208210811415620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610e6f80620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c68116100975780639d35c161116100665780639d35c161146101de578063a457c2d7146101f3578063a9059cbb14610206578063dd62ed3e14610219576100f5565b806342966c681461019d57806370a08231146101b057806379cc6790146101c357806395d89b41146101d6576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b61010261022c565b60405161010f9190610a13565b60405180910390f35b61012b6101263660046109b3565b6102be565b60405161010f9190610a08565b6101406102db565b60405161010f9190610da2565b61012b61015b366004610978565b6102e1565b610168610381565b60405161010f9190610dab565b61012b6101833660046109b3565b610386565b61019b6101963660046109b3565b6103d5565b005b61019b6101ab3660046109dc565b61041d565b6101406101be366004610925565b610431565b61019b6101d13660046109b3565b610450565b6101026104a5565b6101e66104b4565b60405161010f91906109f4565b61012b6102013660046109b3565b6104c3565b61012b6102143660046109b3565b61053e565b610140610227366004610946565b610552565b60606003805461023b90610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610de8565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b5050505050905090565b60006102d26102cb61057d565b8484610581565b50600192915050565b60025490565b60006102ee848484610635565b6001600160a01b03841660009081526001602052604081208161030f61057d565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561035b5760405162461bcd60e51b815260040161035290610b73565b60405180910390fd5b6103768561036761057d565b6103718685610dd1565b610581565b506001949350505050565b601290565b60006102d261039361057d565b8484600160006103a161057d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103719190610db9565b6005546001600160a01b03166103e961057d565b6001600160a01b03161461040f5760405162461bcd60e51b815260040161035290610d45565b610419828261075d565b5050565b61042e61042861057d565b8261081d565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061045e8361022761057d565b9050818110156104805760405162461bcd60e51b815260040161035290610bbb565b6104968361048c61057d565b6103718585610dd1565b6104a0838361081d565b505050565b60606004805461023b90610de8565b6005546001600160a01b031681565b600080600160006104d261057d565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561051e5760405162461bcd60e51b815260040161035290610cc9565b61053461052961057d565b856103718685610dd1565b5060019392505050565b60006102d261054b61057d565b8484610635565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105a75760405162461bcd60e51b815260040161035290610c85565b6001600160a01b0382166105cd5760405162461bcd60e51b815260040161035290610aeb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610628908590610da2565b60405180910390a3505050565b6001600160a01b03831661065b5760405162461bcd60e51b815260040161035290610c40565b6001600160a01b0382166106815760405162461bcd60e51b815260040161035290610a66565b61068c838383610903565b6001600160a01b038316600090815260208190526040902054818110156106c55760405162461bcd60e51b815260040161035290610b2d565b6106cf8282610dd1565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610705908490610db9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074f9190610da2565b60405180910390a350505050565b6001600160a01b0382166107835760405162461bcd60e51b815260040161035290610d0e565b61078f60008383610903565b80600260008282546107a19190610db9565b90915550506001600160a01b038216600090815260208190526040812080548392906107ce908490610db9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610811908590610da2565b60405180910390a35050565b6001600160a01b0382166108435760405162461bcd60e51b815260040161035290610bff565b61084f82600083610903565b6001600160a01b038216600090815260208190526040902054818110156108885760405162461bcd60e51b815260040161035290610aa9565b6108928282610dd1565b6001600160a01b038416600090815260208190526040812091909155600280548492906108c0908490610dd1565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610628908690610da2565b6104a08383836104a0565b80356001600160a01b038116811461044b57600080fd5b600060208284031215610936578081fd5b61093f8261090e565b9392505050565b60008060408385031215610958578081fd5b6109618361090e565b915061096f6020840161090e565b90509250929050565b60008060006060848603121561098c578081fd5b6109958461090e565b92506109a36020850161090e565b9150604084013590509250925092565b600080604083850312156109c5578182fd5b6109ce8361090e565b946020939093013593505050565b6000602082840312156109ed578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a3f57858101830151858201604001528201610a23565b81811115610a505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60208082526038908201527f5052495649506f644552433230546f6b656e3a204f6e6c7920466163746f727960408201527f2063616e2063616c6c20746869732066756e6374696f6e2e0000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610dcc57610dcc610e23565b500190565b600082821015610de357610de3610e23565b500390565b600281046001821680610dfc57607f821691505b60208210811415610e1d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220935b90031f1b04d291e8ea70a14012ff0581fed9a047c6bbd25bf809a6c8918e64736f6c63430008000033a264697066735822122056601a72aa9979710d669f2c4193d3099744fc2ffa339e76e2e99cadb0a245fa64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001185760003560e01c8063532d9c4411620000a5578063a217fddf116200006f578063a217fddf146200024f578063b176d4ba1462000259578063d547741f1462000270578063e792b19414620002875762000118565b8063532d9c441462000200578063797669c914620002175780638d1909ed146200022157806391d1485414620002385762000118565b80632f2ff15d11620000e75780632f2ff15d14620001a25780633325a4e414620001bb57806336568abe14620001d2578063416aad1e14620001e95762000118565b806301ffc9a7146200011d5780630fc09e2e146200014c57806322b2edeb1462000165578063248a9ca3146200018b575b600080fd5b620001346200012e36600462000b1a565b62000291565b60405162000143919062000cef565b60405180910390f35b62000156620002c1565b60405162000143919062000cfa565b6200017c6200017636600462000b44565b620002c7565b60405162000143919062000cc2565b620001566200019c36600462000ad3565b620002fd565b620001b9620001b336600462000aec565b62000312565b005b6200017c620001cc36600462000b44565b62000363565b620001b9620001e336600462000aec565b62000379565b6200017c620001fa36600462000be8565b620003c2565b620001b96200021136600462000b88565b62000632565b6200015662000756565b620001b96200023236600462000aaf565b6200077a565b620001346200024936600462000aec565b620007f7565b6200015662000820565b620001b96200026a36600462000b88565b62000825565b620001b96200028136600462000aec565b620008d3565b6200017c62000901565b60006001600160e01b03198216637965db0b60e01b1480620002b95750620002b98262000910565b90505b919050565b60025490565b600060038383604051620002dd92919062000cb2565b908152604051908190036020019020546001600160a01b03169392505050565b60009081526020819052604090206001015490565b6200032b6200032183620002fd565b6200024962000929565b620003535760405162461bcd60e51b81526004016200034a9062000d80565b60405180910390fd5b6200035f82826200092d565b5050565b600060048383604051620002dd92919062000cb2565b6200038362000929565b6001600160a01b0316816001600160a01b031614620003b65760405162461bcd60e51b81526004016200034a9062001079565b6200035f8282620009b7565b6000806001600160a01b031660038888604051620003e292919062000cb2565b908152604051908190036020019020546001600160a01b0316146200041b5760405162461bcd60e51b81526004016200034a9062000fc3565b60006001600160a01b0316600484846040516200043a92919062000cb2565b908152604051908190036020019020546001600160a01b031614620004735760405162461bcd60e51b81526004016200034a9062000f09565b60008585858530604051620004889062000a3f565b6200049895949392919062000d39565b604051809103906000f080158015620004b5573d6000803e3d6000fd5b509050809150600160026000828254620004d09190620010d6565b925050819055508160038989604051620004ec92919062000cb2565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600485856040516200053392919062000cb2565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff1990911617905560015463374b216760e21b82529091169063dd2c859c906200059a908990899089908990899060040162000d39565b600060405180830381600087803b158015620005b557600080fd5b505af1158015620005ca573d6000803e3d6000fd5b505050508787604051620005e092919062000cb2565b60405180910390207fc0512f6474c9ee949f1cbdc88e43ca774f79b5f1f07d8484696e1cf1a0bd87ce878787876040516200061f949392919062000d03565b60405180910390a2509695505050505050565b620006617f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620006805760405162461bcd60e51b81526004016200034a906200100e565b6001600160a01b038216620006a95760405162461bcd60e51b81526004016200034a9062000f66565b60008111620006cc5760405162461bcd60e51b81526004016200034a9062000ddd565b60038484604051620006e092919062000cb2565b908152604051908190036020018120546340c10f1960e01b82526001600160a01b0316906340c10f19906200071c908590859060040162000cd6565b600060405180830381600087803b1580156200073757600080fd5b505af11580156200074c573d6000803e3d6000fd5b5050505050505050565b7f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f81565b620007a97f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620007c85760405162461bcd60e51b81526004016200034a9062000e97565b620007f47f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f8262000353565b50565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b620008547f71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f6200024962000929565b620008735760405162461bcd60e51b81526004016200034a906200100e565b6001600160a01b0382166200089c5760405162461bcd60e51b81526004016200034a9062000f66565b60008111620008bf5760405162461bcd60e51b81526004016200034a9062000ddd565b60048484604051620006e092919062000cb2565b620008e26200032183620002fd565b620003b65760405162461bcd60e51b81526004016200034a9062000e3a565b6001546001600160a01b031681565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b620009398282620007f7565b6200035f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200097362000929565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b620009c38282620007f7565b156200035f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055620009fb62000929565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b61113c80620010fc83390190565b80356001600160a01b0381168114620002bc57600080fd5b60008083601f84011262000a77578182fd5b50813567ffffffffffffffff81111562000a8f578182fd5b60208301915083602082850101111562000aa857600080fd5b9250929050565b60006020828403121562000ac1578081fd5b62000acc8262000a4d565b9392505050565b60006020828403121562000ae5578081fd5b5035919050565b6000806040838503121562000aff578081fd5b8235915062000b116020840162000a4d565b90509250929050565b60006020828403121562000b2c578081fd5b81356001600160e01b03198116811462000acc578182fd5b6000806020838503121562000b57578182fd5b823567ffffffffffffffff81111562000b6e578283fd5b62000b7c8582860162000a65565b90969095509350505050565b6000806000806060858703121562000b9e578182fd5b843567ffffffffffffffff81111562000bb5578283fd5b62000bc38782880162000a65565b909550935062000bd890506020860162000a4d565b9396929550929360400135925050565b6000806000806000806060878903121562000c01578182fd5b863567ffffffffffffffff8082111562000c19578384fd5b62000c278a838b0162000a65565b9098509650602089013591508082111562000c40578384fd5b62000c4e8a838b0162000a65565b9096509450604089013591508082111562000c67578384fd5b5062000c7689828a0162000a65565b979a9699509497509295939492505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60006040825262000d1960408301868862000c88565b828103602084015262000d2e81858762000c88565b979650505050505050565b60006060825262000d4f60608301878962000c88565b828103602084015262000d6481868862000c88565b9150506001600160a01b03831660408301529695505050505050565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f206772616e740000000000000000000000000000000000606082015260800190565b60208082526035908201527f5052495649506f644552433230466163746f72793a20696e76657374416d6f7560408201527f6e742073686f756c64206e6f74206265207a65726f0000000000000000000000606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000606082015260800190565b6020808252604c908201527f5052495649506f644552433230466163746f72793a206d75737420686176652060408201527f4d4f44455241544f525f524f4c4520746f2061737369676e20537761704d616e60608201526b61676572206164647265737360a01b608082015260a00190565b6020808252602f908201527f5052495649506f644552433230466163746f72793a20506f642073796d626f6c60408201527f20616c7265616479206578697374730000000000000000000000000000000000606082015260800190565b60208082526038908201527f5052495649506f644552433230466163746f72793a204163636f756e7420616460408201527f64726573732073686f756c64206e6f74206265207a65726f0000000000000000606082015260800190565b6020808252602b908201527f5052495649506f644552433230466163746f72793a20506f6420696420616c7260408201526a656164792065786973747360a81b606082015260800190565b60208082526045908201527f5052495649506f644552433230466163746f72793a206d75737420686176652060408201527f4d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e7660608201526432b9ba37b960d91b608082015260a00190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b60008219821115620010f657634e487b7160e01b81526011600452602481fd5b50019056fe60806040523480156200001157600080fd5b506040516200113c3803806200113c8339810160408190526200003491620001e1565b8251839083906200004d90600390602085019062000090565b5080516200006390600490602084019062000090565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620002bd915050565b8280546200009e906200026a565b90600052602060002090601f016020900481019282620000c257600085556200010d565b82601f10620000dd57805160ff19168380011785556200010d565b828001600101855582156200010d579182015b828111156200010d578251825591602001919060010190620000f0565b506200011b9291506200011f565b5090565b5b808211156200011b576000815560010162000120565b600082601f83011262000147578081fd5b81516001600160401b0380821115620001645762000164620002a7565b6040516020601f8401601f19168201810183811183821017156200018c576200018c620002a7565b6040528382528584018101871015620001a3578485fd5b8492505b83831015620001c65785830181015182840182015291820191620001a7565b83831115620001d757848185840101525b5095945050505050565b600080600060608486031215620001f6578283fd5b83516001600160401b03808211156200020d578485fd5b6200021b8783880162000136565b9450602086015191508082111562000231578384fd5b50620002408682870162000136565b604086015190935090506001600160a01b03811681146200025f578182fd5b809150509250925092565b6002810460018216806200027f57607f821691505b60208210811415620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610e6f80620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c68116100975780639d35c161116100665780639d35c161146101de578063a457c2d7146101f3578063a9059cbb14610206578063dd62ed3e14610219576100f5565b806342966c681461019d57806370a08231146101b057806379cc6790146101c357806395d89b41146101d6576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b61010261022c565b60405161010f9190610a13565b60405180910390f35b61012b6101263660046109b3565b6102be565b60405161010f9190610a08565b6101406102db565b60405161010f9190610da2565b61012b61015b366004610978565b6102e1565b610168610381565b60405161010f9190610dab565b61012b6101833660046109b3565b610386565b61019b6101963660046109b3565b6103d5565b005b61019b6101ab3660046109dc565b61041d565b6101406101be366004610925565b610431565b61019b6101d13660046109b3565b610450565b6101026104a5565b6101e66104b4565b60405161010f91906109f4565b61012b6102013660046109b3565b6104c3565b61012b6102143660046109b3565b61053e565b610140610227366004610946565b610552565b60606003805461023b90610de8565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610de8565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b5050505050905090565b60006102d26102cb61057d565b8484610581565b50600192915050565b60025490565b60006102ee848484610635565b6001600160a01b03841660009081526001602052604081208161030f61057d565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561035b5760405162461bcd60e51b815260040161035290610b73565b60405180910390fd5b6103768561036761057d565b6103718685610dd1565b610581565b506001949350505050565b601290565b60006102d261039361057d565b8484600160006103a161057d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103719190610db9565b6005546001600160a01b03166103e961057d565b6001600160a01b03161461040f5760405162461bcd60e51b815260040161035290610d45565b610419828261075d565b5050565b61042e61042861057d565b8261081d565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b600061045e8361022761057d565b9050818110156104805760405162461bcd60e51b815260040161035290610bbb565b6104968361048c61057d565b6103718585610dd1565b6104a0838361081d565b505050565b60606004805461023b90610de8565b6005546001600160a01b031681565b600080600160006104d261057d565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561051e5760405162461bcd60e51b815260040161035290610cc9565b61053461052961057d565b856103718685610dd1565b5060019392505050565b60006102d261054b61057d565b8484610635565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105a75760405162461bcd60e51b815260040161035290610c85565b6001600160a01b0382166105cd5760405162461bcd60e51b815260040161035290610aeb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610628908590610da2565b60405180910390a3505050565b6001600160a01b03831661065b5760405162461bcd60e51b815260040161035290610c40565b6001600160a01b0382166106815760405162461bcd60e51b815260040161035290610a66565b61068c838383610903565b6001600160a01b038316600090815260208190526040902054818110156106c55760405162461bcd60e51b815260040161035290610b2d565b6106cf8282610dd1565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610705908490610db9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074f9190610da2565b60405180910390a350505050565b6001600160a01b0382166107835760405162461bcd60e51b815260040161035290610d0e565b61078f60008383610903565b80600260008282546107a19190610db9565b90915550506001600160a01b038216600090815260208190526040812080548392906107ce908490610db9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610811908590610da2565b60405180910390a35050565b6001600160a01b0382166108435760405162461bcd60e51b815260040161035290610bff565b61084f82600083610903565b6001600160a01b038216600090815260208190526040902054818110156108885760405162461bcd60e51b815260040161035290610aa9565b6108928282610dd1565b6001600160a01b038416600090815260208190526040812091909155600280548492906108c0908490610dd1565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610628908690610da2565b6104a08383836104a0565b80356001600160a01b038116811461044b57600080fd5b600060208284031215610936578081fd5b61093f8261090e565b9392505050565b60008060408385031215610958578081fd5b6109618361090e565b915061096f6020840161090e565b90509250929050565b60008060006060848603121561098c578081fd5b6109958461090e565b92506109a36020850161090e565b9150604084013590509250925092565b600080604083850312156109c5578182fd5b6109ce8361090e565b946020939093013593505050565b6000602082840312156109ed578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610a3f57858101830151858201604001528201610a23565b81811115610a505783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60208082526038908201527f5052495649506f644552433230546f6b656e3a204f6e6c7920466163746f727960408201527f2063616e2063616c6c20746869732066756e6374696f6e2e0000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610dcc57610dcc610e23565b500190565b600082821015610de357610de3610e23565b500390565b600281046001821680610dfc57607f821691505b60208210811415610e1d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220935b90031f1b04d291e8ea70a14012ff0581fed9a047c6bbd25bf809a6c8918e64736f6c63430008000033a264697066735822122056601a72aa9979710d669f2c4193d3099744fc2ffa339e76e2e99cadb0a245fa64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:66",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:66",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:66"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:66",
                "type": ""
              }
            ],
            "src": "14:310:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10436:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:66"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:66"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:66",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:66"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:66"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:66",
                "type": ""
              }
            ],
            "src": "14:198:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:303:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "341:30:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "350:8:66"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "360:8:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "343:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "343:26:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "343:26:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "320:6:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "328:4:66",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "316:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "316:17:66"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "335:3:66"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "312:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "312:27:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "305:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:35:66"
                  },
                  "nodeType": "YulIf",
                  "src": "302:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "380:30:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "403:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "390:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:20:66"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "380:6:66"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:30:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "462:8:66"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "472:8:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "455:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:26:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "455:26:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "425:6:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:18:66",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "422:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "422:30:66"
                  },
                  "nodeType": "YulIf",
                  "src": "419:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "492:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "508:6:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:4:66",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "504:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "504:17:66"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "492:8:66"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "573:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "582:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "585:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "575:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "575:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "575:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "544:6:66"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "552:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "540:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "540:19:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "561:4:66",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "536:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:30:66"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "568:3:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "533:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:39:66"
                  },
                  "nodeType": "YulIf",
                  "src": "530:2:66"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "255:6:66",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "263:3:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "271:8:66",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "281:6:66",
                "type": ""
              }
            ],
            "src": "217:378:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:128:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "716:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "725:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "733:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "718:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "718:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "691:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "700:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "687:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "687:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "683:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "680:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "751:41:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "782:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "761:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "761:31:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "636:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "647:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "659:6:66",
                "type": ""
              }
            ],
            "src": "600:198:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "873:120:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "919:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "928:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "936:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "921:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "921:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "921:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "894:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "903:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "890:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "890:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "915:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "886:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "883:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "954:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "964:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "954:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:66",
                "type": ""
              }
            ],
            "src": "803:190:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1085:179:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1131:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1140:6:66"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1148:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1133:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1133:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1133:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1106:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1115:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1102:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1102:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1127:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1098:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1095:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1166:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1189:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1176:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1176:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1166:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1208:50:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1243:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1254:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1239:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1239:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1218:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1218:40:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1208:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1043:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1054:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1066:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1074:6:66",
                "type": ""
              }
            ],
            "src": "998:266:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1338:237:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1384:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1393:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1401:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1386:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1386:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1386:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1359:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1368:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1380:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1351:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1348:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1419:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1445:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1432:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1423:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1477:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1488:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1499:3:66",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1504:10:66",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1495:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1495:20:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1484:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1484:32:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1474:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:43:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:51:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1464:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1554:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1564:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1554:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1304:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1315:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1327:6:66",
                "type": ""
              }
            ],
            "src": "1269:306:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1670:343:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1716:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1725:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1733:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1718:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1718:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1718:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1691:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1700:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1687:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1687:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1712:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1683:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1680:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1751:37:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1778:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1765:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1765:23:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1755:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1831:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1840:6:66"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1848:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1833:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1833:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1833:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1803:6:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1811:18:66",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:30:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1866:87:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1925:9:66"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1936:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1921:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1921:22:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1945:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1892:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:61:66"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "1870:8:66",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1880:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1962:18:66",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "1972:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1962:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1989:18:66",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1999:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1989:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1628:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1639:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1651:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1659:6:66",
                "type": ""
              }
            ],
            "src": "1580:433:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2142:453:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2188:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2197:6:66"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2205:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2190:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2190:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2190:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2163:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2172:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2159:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2159:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2184:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2155:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2152:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2223:37:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2250:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2237:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:23:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2227:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2303:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2312:6:66"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2320:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2305:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2305:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2305:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2275:6:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2283:18:66",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2272:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2272:30:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2269:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2338:87:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2397:9:66"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2408:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2393:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2393:22:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2417:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2364:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2364:61:66"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "2342:8:66",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2352:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:18:66",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "2444:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2434:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2461:18:66",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2471:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2461:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2488:50:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2523:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2534:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2519:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2519:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2498:20:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2498:40:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2488:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2547:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2574:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2585:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2570:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2570:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2557:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2084:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2095:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2107:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2115:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2123:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2131:6:66",
                "type": ""
              }
            ],
            "src": "2018:577:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2764:892:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2810:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2819:6:66"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2827:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2812:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2812:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2812:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2785:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2794:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2781:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2781:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2806:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2777:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2774:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2845:37:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2872:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2859:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2859:23:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2849:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2891:28:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2901:18:66",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2895:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2946:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2955:6:66"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2963:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2948:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2948:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2948:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2934:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2942:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2931:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:14:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2928:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2981:87:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3040:9:66"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3051:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3036:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:22:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3060:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3007:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:61:66"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "2985:8:66",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2995:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3077:18:66",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "3087:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3104:18:66",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "3114:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3104:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3131:48:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3164:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3175:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3160:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3160:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3147:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3147:32:66"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "3135:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3208:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3217:6:66"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3225:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3210:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3210:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3210:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "3194:8:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3204:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3191:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3191:16:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3188:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3243:89:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3302:9:66"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3313:8:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3298:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3298:24:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3324:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3269:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3269:63:66"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "3247:8:66",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "3257:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3341:18:66",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "3351:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3341:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3368:18:66",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "3378:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3368:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3395:48:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3428:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3439:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3424:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3424:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3411:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:32:66"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "3399:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3472:26:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3481:6:66"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3489:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3474:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3474:22:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3474:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "3458:8:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3468:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3455:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3455:16:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3452:2:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3507:89:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3566:9:66"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "3577:8:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3562:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3562:24:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3588:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3533:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3533:63:66"
                  },
                  "variables": [
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "3511:8:66",
                      "type": ""
                    },
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "3521:8:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3605:18:66",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "3615:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3632:18:66",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "3642:8:66"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3632:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2690:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2701:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2713:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2721:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2729:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2737:6:66",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2745:6:66",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2753:6:66",
                "type": ""
              }
            ],
            "src": "2600:1056:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3730:202:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3747:3:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3752:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3740:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3740:19:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3740:19:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3785:3:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3790:4:66",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3781:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3781:14:66"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "3797:5:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3804:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3768:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3768:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3768:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3835:3:66"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3840:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3831:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3831:16:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3849:4:66",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3827:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3827:27:66"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3856:3:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3820:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3820:40:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3820:40:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3869:57:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3884:3:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3897:6:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3905:2:66",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3893:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3893:15:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3914:2:66",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3910:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3910:7:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3889:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3889:29:66"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:39:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3921:4:66",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3876:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:50:66"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3869:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "3699:5:66",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3706:6:66",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3714:3:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3722:3:66",
                "type": ""
              }
            ],
            "src": "3661:271:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4086:126:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4109:3:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4114:6:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4122:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4096:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4096:33:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4096:33:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4138:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4152:3:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4157:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4148:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4148:16:66"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4142:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4180:2:66"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4184:3:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4173:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4173:15:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4197:9:66",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "4204:2:66"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4197:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4054:3:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4059:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4067:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4078:3:66",
                "type": ""
              }
            ],
            "src": "3937:275:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4318:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4328:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4340:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4351:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4336:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4336:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4328:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4370:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4385:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4393:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4381:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4381:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4363:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4363:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4363:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4287:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4298:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4309:4:66",
                "type": ""
              }
            ],
            "src": "4217:226:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4577:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4587:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4599:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4610:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4595:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4595:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4587:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4629:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4644:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4652:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4640:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4640:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4622:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4716:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4727:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4712:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4712:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4732:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4705:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4538:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4549:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4557:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4568:4:66",
                "type": ""
              }
            ],
            "src": "4448:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4845:92:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4855:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4867:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4878:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4863:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4863:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4855:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4897:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4922:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4915:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4915:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4908:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4890:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4890:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4890:41:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4814:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4825:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4836:4:66",
                "type": ""
              }
            ],
            "src": "4750:187:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5043:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5053:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5065:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5076:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5061:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5061:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5053:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5095:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5106:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5088:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5088:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5088:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5012:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5023:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5034:4:66",
                "type": ""
              }
            ],
            "src": "4942:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5313:252:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5330:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5341:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5323:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5323:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5323:21:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5353:78:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5396:6:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5404:6:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5416:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5427:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5367:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5367:64:66"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5357:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5451:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5462:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5447:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5447:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "5471:6:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5479:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5467:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5467:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5440:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:50:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5440:50:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5499:60:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5536:6:66"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5544:6:66"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5552:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5507:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:52:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5499:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5258:9:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5269:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5277:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5285:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5293:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5304:4:66",
                "type": ""
              }
            ],
            "src": "5124:441:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5787:344:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5804:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5815:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5797:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5797:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5797:21:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5827:78:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5870:6:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5878:6:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5890:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5901:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5886:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5886:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5841:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5841:64:66"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5831:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5925:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5936:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5921:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5921:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "5945:6:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5953:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5914:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:50:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5914:50:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5973:60:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6010:6:66"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6018:6:66"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6026:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5981:28:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:52:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5973:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6053:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6064:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6049:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6049:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "6073:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6081:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6069:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6069:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6042:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:83:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6042:83:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5724:9:66",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5735:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5743:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5751:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5759:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5767:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5778:4:66",
                "type": ""
              }
            ],
            "src": "5570:561:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6310:237:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6327:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6338:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6320:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6320:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6320:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6361:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6372:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6357:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6357:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6377:2:66",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6350:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6350:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6350:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6400:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6411:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6396:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6396:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6416:34:66",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6389:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6389:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6471:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6482:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6467:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6467:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6487:17:66",
                        "type": "",
                        "value": " admin to grant"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6460:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6460:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6460:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6514:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6526:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6537:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6522:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6522:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6514:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6287:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6301:4:66",
                "type": ""
              }
            ],
            "src": "6136:411:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6726:243:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6743:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6754:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6736:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6736:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6736:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6777:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6788:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6773:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6773:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6793:2:66",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6766:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6766:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6766:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6816:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6827:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6812:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6812:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6832:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: investAmou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6805:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6805:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6887:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6898:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6883:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6883:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6903:23:66",
                        "type": "",
                        "value": "nt should not be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6876:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6876:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6876:51:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6936:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6948:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6959:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6944:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6944:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6936:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6703:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6717:4:66",
                "type": ""
              }
            ],
            "src": "6552:417:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7148:238:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7165:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7176:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7158:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7158:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7158:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7199:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7210:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7195:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7195:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7215:2:66",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7188:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7188:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7188:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7238:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7249:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7234:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7234:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7254:34:66",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7227:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7227:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7309:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7320:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7305:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7305:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7325:18:66",
                        "type": "",
                        "value": " admin to revoke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7298:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7298:46:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7353:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7365:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7376:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7361:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7353:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7125:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7139:4:66",
                "type": ""
              }
            ],
            "src": "6974:412:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7565:306:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7582:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7593:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7616:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7627:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7612:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7612:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7632:2:66",
                        "type": "",
                        "value": "76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7605:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7605:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7605:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7655:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7666:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7651:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7651:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7671:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: must have "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7644:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7644:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7644:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7722:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7722:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7742:34:66",
                        "type": "",
                        "value": "MODERATOR_ROLE to assign SwapMan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7715:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7715:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7797:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7808:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7793:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7793:19:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7814:14:66",
                        "type": "",
                        "value": "ager address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7786:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7786:43:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7838:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7850:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7861:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7846:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7846:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7838:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7542:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7556:4:66",
                "type": ""
              }
            ],
            "src": "7391:480:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8050:237:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8067:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8078:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8060:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8060:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8060:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8101:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8112:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8097:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8097:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8117:2:66",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8090:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8090:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8090:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8140:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8151:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8136:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8136:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8156:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: Pod symbol"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8129:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8129:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8211:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8222:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8207:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8207:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8227:17:66",
                        "type": "",
                        "value": " already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8200:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8200:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8254:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8266:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8277:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8262:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8262:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8254:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8027:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8041:4:66",
                "type": ""
              }
            ],
            "src": "7876:411:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8466:246:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8483:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8494:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8476:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8476:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8476:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8517:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8528:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8513:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8513:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:2:66",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8506:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8506:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8506:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8556:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8567:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8552:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8552:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8572:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: Account ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8545:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8545:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8627:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8638:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8623:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8623:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8643:26:66",
                        "type": "",
                        "value": "dress should not be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8616:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:54:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8616:54:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8679:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8691:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8702:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8687:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8687:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8679:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8443:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8457:4:66",
                "type": ""
              }
            ],
            "src": "8292:420:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8891:233:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8908:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8919:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8901:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8901:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8901:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8942:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8953:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8938:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8938:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8958:2:66",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8931:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8931:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8931:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8981:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8992:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8977:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8977:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8997:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: Pod id alr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8970:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8970:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8970:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9052:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9063:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9048:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9048:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9068:13:66",
                        "type": "",
                        "value": "eady exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9041:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9041:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9041:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9091:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9103:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9114:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9099:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9099:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9091:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8868:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8882:4:66",
                "type": ""
              }
            ],
            "src": "8717:407:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9303:299:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9320:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9331:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9313:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9313:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9313:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9354:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9365:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9350:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9350:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9370:2:66",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9343:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9343:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9343:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9393:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9404:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9389:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9389:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9409:34:66",
                        "type": "",
                        "value": "PRIVIPodERC20Factory: must have "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9382:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9382:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9382:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9464:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9475:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9480:34:66",
                        "type": "",
                        "value": "MODERATOR_ROLE to invest for inv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9453:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9453:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9453:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9535:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9546:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9531:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9531:19:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9552:7:66",
                        "type": "",
                        "value": "estor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9524:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9524:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9569:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9581:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9592:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9577:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9577:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9569:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9280:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9294:4:66",
                "type": ""
              }
            ],
            "src": "9129:473:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9781:237:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9798:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9809:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9791:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9791:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9791:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9832:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9843:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9828:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9828:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9848:2:66",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9821:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9821:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9821:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9871:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9882:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9867:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9867:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9887:34:66",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9860:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9860:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9860:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9942:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9953:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9938:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9938:18:66"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9958:17:66",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9931:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9931:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9931:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9985:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9997:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10008:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9993:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9993:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9985:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9758:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9772:4:66",
                "type": ""
              }
            ],
            "src": "9607:411:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10124:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10134:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10146:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10157:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10142:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10134:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10176:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10187:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10169:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10169:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10169:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10093:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10104:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10115:4:66",
                "type": ""
              }
            ],
            "src": "10023:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10253:181:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10288:115:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "10309:3:66"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10318:3:66",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10323:10:66",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10314:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10314:20:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10302:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10302:33:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10302:33:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10355:1:66",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10358:4:66",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10348:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10348:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10348:15:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "10383:3:66"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10388:4:66",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10376:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10376:17:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10376:17:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10269:1:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10276:1:66"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10272:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10272:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10266:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10266:13:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10263:2:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10412:16:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10423:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10426:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10419:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10419:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10412:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10236:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10239:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10245:3:66",
                "type": ""
              }
            ],
            "src": "10205:229:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := abi_decode_t_address(add(headStart, 32))\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_t_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        let value4_1, value5_1 := abi_decode_t_string_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_t_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, end)\n        end := _1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_string_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_t_string_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_string_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to grant\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: investAmou\")\n        mstore(add(headStart, 96), \"nt should not be zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to revoke\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 76)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: must have \")\n        mstore(add(headStart, 96), \"MODERATOR_ROLE to assign SwapMan\")\n        mstore(add(headStart, 128), \"ager address\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: Pod symbol\")\n        mstore(add(headStart, 96), \" already exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: Account ad\")\n        mstore(add(headStart, 96), \"dress should not be zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: Pod id alr\")\n        mstore(add(headStart, 96), \"eady exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"PRIVIPodERC20Factory: must have \")\n        mstore(add(headStart, 96), \"MODERATOR_ROLE to invest for inv\")\n        mstore(add(headStart, 128), \"estor\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "330:5606:9:-:0;;;922:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;963:44;2408:4:43;994:12:9;:10;:12::i;:::-;963:10;:44::i;:::-;1013:40;422:27;1040:12;:10;:12::i;1013:40::-;1059:20;:36;;-1:-1:-1;;;;;;1059:36:9;-1:-1:-1;;;;;1059:36:9;;;;;;;;;;330:5606;;586:96:61;665:10;586:96;:::o;6519:110:43:-;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:43;;;;;;;;;:36;;-1:-1:-1;;7064:36:43;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:43;7137:7;-1:-1:-1;;;;;7119:40:43;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;3867:137::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:43;;;;;;;;;;;;;;;3867:137::o;14:310:66:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:66;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:66:o;:::-;330:5606:9;;;;;;",
  "deployedSourceMap": "330:5606:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566:214:43;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1594:112:9;;;:::i;:::-;;;;;;;:::i;1887:159::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4185:121:43:-;;;;;;:::i;:::-;;:::i;4556:228::-;;;;;;:::i;:::-;;:::i;:::-;;2238:179:9;;;;;;:::i;:::-;;:::i;5740:214:43:-;;;;;;:::i;:::-;;:::i;2923:1065:9:-;;;;;;:::i;:::-;;:::i;4363:582::-;;;;;;:::i;:::-;;:::i;381:68::-;;;:::i;1243:275::-;;;;;;:::i;:::-;;:::i;3867:137:43:-;;;;;;:::i;:::-;;:::i;2363:49::-;;;:::i;5332:602:9:-;;;;;;:::i;:::-;;:::i;5018:231:43:-;;;;;;:::i;:::-;;:::i;453:35:9:-;;;:::i;3566:214:43:-;3651:4;-1:-1:-1;;;;;;3674:47:43;;-1:-1:-1;;;3674:47:43;;:99;;;3737:36;3761:11;3737:23;:36::i;:::-;3667:106;;3566:214;;;;:::o;1594:112:9:-;1686:15;;;1594:112::o;1887:159::-;1972:18;2013:21;2035:5;;2013:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2013:28:9;;1887:159;-1:-1:-1;;;1887:159:9:o;4185:121:43:-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121::o;4556:228::-;4648:41;4656:18;4669:4;4656:12;:18::i;:::-;4676:12;:10;:12::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:43;;;;;;;:::i;:::-;;;;;;;;;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;2238:179:9:-;2333:18;2374:25;2400:11;;2374:38;;;;;;;:::i;5740:214:43:-;5846:12;:10;:12::i;:::-;-1:-1:-1;;;;;5835:23:43;:7;-1:-1:-1;;;;;5835:23:43;;5827:83;;;;-1:-1:-1;;;5827:83:43;;;;;;;:::i;:::-;5921:26;5933:4;5939:7;5921:11;:26::i;2923:1065:9:-;3061:18;3315:1;-1:-1:-1;;;;;3275:42:9;:21;3297:5;;3275:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3275:28:9;:42;3260:116;;;;-1:-1:-1;;;3260:116:9;;;;;;;:::i;:::-;3450:1;-1:-1:-1;;;;;3397:55:9;:25;3423:14;;3397:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3397:41:9;:55;3382:133;;;;-1:-1:-1;;;3382:133:9;;;;;;;:::i;:::-;3522:27;3581:12;;3595:14;;3619:4;3558:67;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3522:103;;3652:8;3631:30;;3687:1;3668:15;;:20;;;;;;;:::i;:::-;;;;;;;;3726:10;3695:21;3717:5;;3695:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;-1:-1:-1;;;;;3695:41:9;;;;;-1:-1:-1;;;;;3695:41:9;;;;;;3786:10;3742:25;3768:14;;3742:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;:54;;-1:-1:-1;;;;;3742:54:9;;;-1:-1:-1;;3742:54:9;;;;;;;3818:20;-1:-1:-1;;;3803:121:9;;3818:20;;;;3803:55;;:121;;3866:12;;;;3886:14;;;;3908:10;;3803:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3947:5;;3936:47;;;;;;;:::i;:::-;;;;;;;;;3954:12;;3968:14;;3936:47;;;;;;;;;:::i;:::-;;;;;;;;2923:1065;;;;;;;;;:::o;4363:582::-;4497:37;422:27;4521:12;:10;:12::i;4497:37::-;4482:137;;;;-1:-1:-1;;;4482:137:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;4640:21:9;;4625:108;;;;-1:-1:-1;;;4625:108:9;;;;;;;:::i;:::-;4769:1;4754:12;:16;4739:100;;;;-1:-1:-1;;;4739:100:9;;;;;;;:::i;:::-;4865:21;4887:5;;4865:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;4846:94:9;;-1:-1:-1;;;;;4865:28:9;;4846:53;;:94;;4907:7;;4922:12;;4846:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4363:582;;;;:::o;381:68::-;422:27;381:68;:::o;1243:275::-;1332:37;422:27;1356:12;:10;:12::i;1332:37::-;1317:144;;;;-1:-1:-1;;;1317:144:9;;;;;;;:::i;:::-;1467:46;422:27;1494:18;1467:10;:46::i;:::-;1243:275;:::o;3867:137:43:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:43;;;;;;;;;;;;;;;3867:137::o;2363:49::-;2408:4;2363:49;:::o;5332:602:9:-;5476:37;422:27;5500:12;:10;:12::i;5476:37::-;5461:137;;;;-1:-1:-1;;;5461:137:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5619:21:9;;5604:108;;;;-1:-1:-1;;;5604:108:9;;;;;;;:::i;:::-;5748:1;5733:12;:16;5718:100;;;;-1:-1:-1;;;5718:100:9;;;;;;;:::i;:::-;5844:25;5870:11;;5844:38;;;;;;;:::i;5018:231:43:-;5111:41;5119:18;5132:4;5119:12;:18::i;5111:41::-;5103:102;;;;-1:-1:-1;;;5103:102:43;;;;;;;:::i;453:35:9:-;;;-1:-1:-1;;;;;453:35:9;;:::o;763:155:64:-;-1:-1:-1;;;;;;871:40:64;;-1:-1:-1;;;871:40:64;763:155;;;:::o;586:96:61:-;665:10;586:96;:::o;6952:224:43:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:43;;;;;;;;;:36;;-1:-1:-1;;7064:36:43;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:43;7137:7;-1:-1:-1;;;;;7119:40:43;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:43;;;;;;;;;:37;;-1:-1:-1;;7294:37:43;;;7377:12;:10;:12::i;:::-;-1:-1:-1;;;;;7350:40:43;7368:7;-1:-1:-1;;;;;7350:40:43;7362:4;7350:40;;;;;;;;;;7182:225;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:198:66:-;84:20;;-1:-1:-1;;;;;133:54:66;;123:65;;113:2;;202:1;199;192:12;217:378;;;335:3;328:4;320:6;316:17;312:27;302:2;;360:8;350;343:26;302:2;-1:-1:-1;390:20:66;;433:18;422:30;;419:2;;;472:8;462;455:26;419:2;516:4;508:6;504:17;492:29;;568:3;561:4;552:6;544;540:19;536:30;533:39;530:2;;;585:1;582;575:12;530:2;292:303;;;;;:::o;600:198::-;;712:2;700:9;691:7;687:23;683:32;680:2;;;733:6;725;718:22;680:2;761:31;782:9;761:31;:::i;:::-;751:41;670:128;-1:-1:-1;;;670:128:66:o;803:190::-;;915:2;903:9;894:7;890:23;886:32;883:2;;;936:6;928;921:22;883:2;-1:-1:-1;964:23:66;;873:120;-1:-1:-1;873:120:66:o;998:266::-;;;1127:2;1115:9;1106:7;1102:23;1098:32;1095:2;;;1148:6;1140;1133:22;1095:2;1189:9;1176:23;1166:33;;1218:40;1254:2;1243:9;1239:18;1218:40;:::i;:::-;1208:50;;1085:179;;;;;:::o;1269:306::-;;1380:2;1368:9;1359:7;1355:23;1351:32;1348:2;;;1401:6;1393;1386:22;1348:2;1432:23;;-1:-1:-1;;;;;;1484:32:66;;1474:43;;1464:2;;1536:6;1528;1521:22;1580:433;;;1712:2;1700:9;1691:7;1687:23;1683:32;1680:2;;;1733:6;1725;1718:22;1680:2;1778:9;1765:23;1811:18;1803:6;1800:30;1797:2;;;1848:6;1840;1833:22;1797:2;1892:61;1945:7;1936:6;1925:9;1921:22;1892:61;:::i;:::-;1972:8;;1866:87;;-1:-1:-1;1670:343:66;-1:-1:-1;;;;1670:343:66:o;2018:577::-;;;;;2184:2;2172:9;2163:7;2159:23;2155:32;2152:2;;;2205:6;2197;2190:22;2152:2;2250:9;2237:23;2283:18;2275:6;2272:30;2269:2;;;2320:6;2312;2305:22;2269:2;2364:61;2417:7;2408:6;2397:9;2393:22;2364:61;:::i;:::-;2444:8;;-1:-1:-1;2338:87:66;-1:-1:-1;2498:40:66;;-1:-1:-1;2534:2:66;2519:18;;2498:40;:::i;:::-;2142:453;;;;-1:-1:-1;2488:50:66;;2585:2;2570:18;2557:32;;-1:-1:-1;;2142:453:66:o;2600:1056::-;;;;;;;2806:2;2794:9;2785:7;2781:23;2777:32;2774:2;;;2827:6;2819;2812:22;2774:2;2872:9;2859:23;2901:18;2942:2;2934:6;2931:14;2928:2;;;2963:6;2955;2948:22;2928:2;3007:61;3060:7;3051:6;3040:9;3036:22;3007:61;:::i;:::-;3087:8;;-1:-1:-1;2981:87:66;-1:-1:-1;3175:2:66;3160:18;;3147:32;;-1:-1:-1;3191:16:66;;;3188:2;;;3225:6;3217;3210:22;3188:2;3269:63;3324:7;3313:8;3302:9;3298:24;3269:63;:::i;:::-;3351:8;;-1:-1:-1;3243:89:66;-1:-1:-1;3439:2:66;3424:18;;3411:32;;-1:-1:-1;3455:16:66;;;3452:2;;;3489:6;3481;3474:22;3452:2;;3533:63;3588:7;3577:8;3566:9;3562:24;3533:63;:::i;:::-;2764:892;;;;-1:-1:-1;2764:892:66;;-1:-1:-1;2764:892:66;;3615:8;;2764:892;-1:-1:-1;;;2764:892:66:o;3661:271::-;;3752:6;3747:3;3740:19;3804:6;3797:5;3790:4;3785:3;3781:14;3768:43;3856:3;3849:4;3840:6;3835:3;3831:16;3827:27;3820:40;3921:4;3914:2;3910:7;3905:2;3897:6;3893:15;3889:29;3884:3;3880:39;3876:50;3869:57;;3730:202;;;;;:::o;3937:275::-;;4122:6;4114;4109:3;4096:33;4148:16;;4173:15;;;4148:16;4086:126;-1:-1:-1;4086:126:66:o;4217:226::-;-1:-1:-1;;;;;4381:55:66;;;;4363:74;;4351:2;4336:18;;4318:125::o;4448:297::-;-1:-1:-1;;;;;4640:55:66;;;;4622:74;;4727:2;4712:18;;4705:34;4610:2;4595:18;;4577:168::o;4750:187::-;4915:14;;4908:22;4890:41;;4878:2;4863:18;;4845:92::o;4942:177::-;5088:25;;;5076:2;5061:18;;5043:76::o;5124:441::-;;5341:2;5330:9;5323:21;5367:64;5427:2;5416:9;5412:18;5404:6;5396;5367:64;:::i;:::-;5479:9;5471:6;5467:22;5462:2;5451:9;5447:18;5440:50;5507:52;5552:6;5544;5536;5507:52;:::i;:::-;5499:60;5313:252;-1:-1:-1;;;;;;;5313:252:66:o;5570:561::-;;5815:2;5804:9;5797:21;5841:64;5901:2;5890:9;5886:18;5878:6;5870;5841:64;:::i;:::-;5953:9;5945:6;5941:22;5936:2;5925:9;5921:18;5914:50;5981:52;6026:6;6018;6010;5981:52;:::i;:::-;5973:60;;;-1:-1:-1;;;;;6073:6:66;6069:55;6064:2;6053:9;6049:18;6042:83;5787:344;;;;;;;;:::o;6136:411::-;6338:2;6320:21;;;6377:2;6357:18;;;6350:30;6416:34;6411:2;6396:18;;6389:62;6487:17;6482:2;6467:18;;6460:45;6537:3;6522:19;;6310:237::o;6552:417::-;6754:2;6736:21;;;6793:2;6773:18;;;6766:30;6832:34;6827:2;6812:18;;6805:62;6903:23;6898:2;6883:18;;6876:51;6959:3;6944:19;;6726:243::o;6974:412::-;7176:2;7158:21;;;7215:2;7195:18;;;7188:30;7254:34;7249:2;7234:18;;7227:62;7325:18;7320:2;7305:18;;7298:46;7376:3;7361:19;;7148:238::o;7391:480::-;7593:2;7575:21;;;7632:2;7612:18;;;7605:30;7671:34;7666:2;7651:18;;7644:62;7742:34;7737:2;7722:18;;7715:62;-1:-1:-1;;;7808:3:66;7793:19;;7786:43;7861:3;7846:19;;7565:306::o;7876:411::-;8078:2;8060:21;;;8117:2;8097:18;;;8090:30;8156:34;8151:2;8136:18;;8129:62;8227:17;8222:2;8207:18;;8200:45;8277:3;8262:19;;8050:237::o;8292:420::-;8494:2;8476:21;;;8533:2;8513:18;;;8506:30;8572:34;8567:2;8552:18;;8545:62;8643:26;8638:2;8623:18;;8616:54;8702:3;8687:19;;8466:246::o;8717:407::-;8919:2;8901:21;;;8958:2;8938:18;;;8931:30;8997:34;8992:2;8977:18;;8970:62;-1:-1:-1;;;9063:2:66;9048:18;;9041:41;9114:3;9099:19;;8891:233::o;9129:473::-;9331:2;9313:21;;;9370:2;9350:18;;;9343:30;9409:34;9404:2;9389:18;;9382:62;9480:34;9475:2;9460:18;;9453:62;-1:-1:-1;;;9546:3:66;9531:19;;9524:36;9592:3;9577:19;;9303:299::o;9607:411::-;9809:2;9791:21;;;9848:2;9828:18;;;9821:30;9887:34;9882:2;9867:18;;9860:62;9958:17;9953:2;9938:18;;9931:45;10008:3;9993:19;;9781:237::o;10205:229::-;;10276:1;10272:6;10269:1;10266:13;10263:2;;;-1:-1:-1;;;10302:33:66;;10358:4;10355:1;10348:15;10388:4;10309:3;10376:17;10263:2;-1:-1:-1;10419:9:66;;10253:181::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./token/PRIVIPodERC20Token.sol\";\nimport \"./interfaces/IBridgeManager.sol\";\n\n/**\n * @title   PRIVIPodERC20Factory contract\n * @dev     Creates new ERC20 tokens using a factory pattern\n * @author  PRIVI\n **/\ncontract PRIVIPodERC20Factory is AccessControl {\n  bytes32 public constant MODERATOR_ROLE = keccak256(\"MODERATOR_ROLE\");\n  address public bridgeManagerAddress;\n  uint256 private totalPodCreated;\n  mapping(string => address) private podTokenAddressesById;\n  mapping(string => address) private podTokenAddressesBySymbol;\n\n  event PodCreated(\n    string indexed podId,\n    string podTokenName,\n    string podTokenSymbol\n  );\n\n  /**\n   * @dev\n   * - Grants `DEFAULT_ADMIN_ROLE` and `MODERATOR_ROLE` to the\n   *   account that deploys the contract\n   * - Assigns the bridgeManager address\n   */\n  constructor(address bridgeAddress) {\n    _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    _setupRole(MODERATOR_ROLE, _msgSender());\n    bridgeManagerAddress = bridgeAddress;\n  }\n\n  /**\n   * @notice Assigns `MODERATOR_ROLE` to SwapManager contract\n   * @param  swapManagerAddress The SwapManager contract address\n   */\n  function assignRoleSwapManager(address swapManagerAddress) external {\n    require(\n      hasRole(MODERATOR_ROLE, _msgSender()),\n      \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address\"\n    );\n    _setupRole(MODERATOR_ROLE, swapManagerAddress);\n  }\n\n  /**\n   * @notice Returns the total amount of Pod tokens created\n   */\n  function getTotalTokenCreated() external view returns (uint256 totalPods) {\n    totalPods = totalPodCreated;\n  }\n\n  /**\n   * @notice Returns the contract address of the Pod token\n   * @param  podId The Pod token identifier\n   * @return podAddress The contract address of the Pod token\n   */\n  function getPodAddressById(string calldata podId)\n    external\n    view\n    returns (address podAddress)\n  {\n    podAddress = podTokenAddressesById[podId];\n  }\n\n  /**\n   * @notice Returns the contract address of the Pod token\n   * @param  tokenSymbol The Pod token symbol (ticker)\n   * @return podAddress The contract address of the Pod token\n   */\n  function getPodAddressBySymbol(string calldata tokenSymbol)\n    external\n    view\n    returns (address podAddress)\n  {\n    podAddress = podTokenAddressesBySymbol[tokenSymbol];\n  }\n\n  /**\n   * @notice Creates an ERC20 Pod token and registers it in the BridgeManager\n   * @dev    - Pod id must not exist\n   *         - Pod name & symbol must not exist\n   *         - Pod name & symbol can't be empty\n   *         - Pod symbol can't be greater than 25 characters\n   * @param  podId The Pod token identifier\n   * @param  podTokenName The Pod token name\n   * @param  podTokenSymbol The Pod token symbol (ticker)\n   * @return podAddress The contract address of the Pod token created\n   */\n  function createPod(\n    string calldata podId,\n    string calldata podTokenName,\n    string calldata podTokenSymbol\n  ) external returns (address podAddress) {\n    // TODO: Check restrictions to create POD tokens\n    // require(hasRole(MODERATOR_ROLE, _msgSender()), \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to create pod.\");\n    require(\n      podTokenAddressesById[podId] == address(0),\n      \"PRIVIPodERC20Factory: Pod id already exists\"\n    );\n    require(\n      podTokenAddressesBySymbol[podTokenSymbol] == address(0),\n      \"PRIVIPodERC20Factory: Pod symbol already exists\"\n    );\n\n    PRIVIPodERC20Token podToken =\n      new PRIVIPodERC20Token(podTokenName, podTokenSymbol, address(this));\n    podAddress = address(podToken);\n\n    totalPodCreated += 1;\n\n    podTokenAddressesById[podId] = podAddress;\n    podTokenAddressesBySymbol[podTokenSymbol] = podAddress;\n\n    IBridgeManager(bridgeManagerAddress).registerTokenERC20(\n      podTokenName,\n      podTokenSymbol,\n      podAddress\n    );\n\n    emit PodCreated(podId, podTokenName, podTokenSymbol);\n  }\n\n  /**\n   * @notice Mints ERC20 Pod tokens\n   * @dev    - The caller must MODERATOR_ROLE\n   *         - `account` address can't be zero\n   *         - 'investAmount` must be greater than zero\n   * @param  podId The Pod token identifier\n   * @param  account The destination account to receive minted tokens\n   * @param  investAmount The amount of tokens to be minted\n   */\n  function mintPodTokenById(\n    string calldata podId,\n    address account,\n    uint256 investAmount\n  ) external {\n    require(\n      hasRole(MODERATOR_ROLE, _msgSender()),\n      \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\"\n    );\n    require(\n      account != address(0),\n      \"PRIVIPodERC20Factory: Account address should not be zero\"\n    );\n    require(\n      investAmount > 0,\n      \"PRIVIPodERC20Factory: investAmount should not be zero\"\n    );\n\n    PRIVIPodERC20Token(podTokenAddressesById[podId]).mint(\n      account,\n      investAmount\n    );\n  }\n\n  /**\n   * @notice Mints ERC20 Pod tokens\n   * @dev    - The caller must MODERATOR_ROLE\n   *         - `account` address can't be zero\n   *         - 'investAmount` must be greater than zero\n   * @param  tokenSymbol The Pod token symbol (sticker)\n   * @param  account The destination account to receive minted tokens\n   * @param  investAmount The amount of tokens to be minted\n   */\n  function mintPodTokenBySymbol(\n    string calldata tokenSymbol,\n    address account,\n    uint256 investAmount\n  ) external {\n    require(\n      hasRole(MODERATOR_ROLE, _msgSender()),\n      \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\"\n    );\n    require(\n      account != address(0),\n      \"PRIVIPodERC20Factory: Account address should not be zero\"\n    );\n    require(\n      investAmount > 0,\n      \"PRIVIPodERC20Factory: investAmount should not be zero\"\n    );\n\n    PRIVIPodERC20Token(podTokenAddressesBySymbol[tokenSymbol]).mint(\n      account,\n      investAmount\n    );\n  }\n}\n",
  "sourcePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/PRIVIPodERC20Factory.sol",
  "ast": {
    "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/PRIVIPodERC20Factory.sol",
    "exportedSymbols": {
      "AccessControl": [
        8171
      ],
      "Context": [
        11538
      ],
      "ERC165": [
        11826
      ],
      "ERC20": [
        10037
      ],
      "ERC20Burnable": [
        10176
      ],
      "IAccessControl": [
        7891
      ],
      "IBridgeManager": [
        5268
      ],
      "IERC165": [
        11838
      ],
      "IERC20": [
        10115
      ],
      "PRIVIPodERC20Factory": [
        3167
      ],
      "PRIVIPodERC20Token": [
        6514
      ]
    },
    "id": 3168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2867,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2868,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 8172,
        "src": "57:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/token/PRIVIPodERC20Token.sol",
        "file": "./token/PRIVIPodERC20Token.sol",
        "id": 2869,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 6515,
        "src": "116:40:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/interfaces/IBridgeManager.sol",
        "file": "./interfaces/IBridgeManager.sol",
        "id": 2870,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 5269,
        "src": "157:41:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2872,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8171,
              "src": "363:13:9"
            },
            "id": 2873,
            "nodeType": "InheritanceSpecifier",
            "src": "363:13:9"
          }
        ],
        "contractDependencies": [
          6514,
          7891,
          8171,
          11538,
          11826,
          11838
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2871,
          "nodeType": "StructuredDocumentation",
          "src": "200:129:9",
          "text": " @title   PRIVIPodERC20Factory contract\n @dev     Creates new ERC20 tokens using a factory pattern\n @author  PRIVI*"
        },
        "fullyImplemented": true,
        "id": 3167,
        "linearizedBaseContracts": [
          3167,
          8171,
          11826,
          11838,
          7891,
          11538
        ],
        "name": "PRIVIPodERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "797669c9",
            "id": 2878,
            "mutability": "constant",
            "name": "MODERATOR_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "381:68:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2874,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d4f44455241544f525f524f4c45",
                  "id": 2876,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "432:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f",
                    "typeString": "literal_string \"MODERATOR_ROLE\""
                  },
                  "value": "MODERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f",
                    "typeString": "literal_string \"MODERATOR_ROLE\""
                  }
                ],
                "id": 2875,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "422:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2877,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "422:27:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e792b194",
            "id": 2880,
            "mutability": "mutable",
            "name": "bridgeManagerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "453:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2882,
            "mutability": "mutable",
            "name": "totalPodCreated",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "492:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2886,
            "mutability": "mutable",
            "name": "podTokenAddressesById",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "527:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2885,
              "keyType": {
                "id": 2883,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "535:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "527:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2890,
            "mutability": "mutable",
            "name": "podTokenAddressesBySymbol",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "587:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2889,
              "keyType": {
                "id": 2887,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "595:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "587:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2888,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "605:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2898,
            "name": "PodCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "674:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "podTokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "700:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2893,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "podTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "725:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2895,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:82:9"
            },
            "src": "652:99:9"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "957:143:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2905,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "974:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11526,
                          "src": "994:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "994:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2904,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "963:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2909,
                  "nodeType": "ExpressionStatement",
                  "src": "963:44:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2911,
                        "name": "MODERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1024:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2912,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11526,
                          "src": "1040:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1040:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2910,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1013:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:40:9"
                },
                {
                  "expression": {
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2916,
                      "name": "bridgeManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "1059:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2917,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2901,
                      "src": "1082:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1059:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:36:9"
                }
              ]
            },
            "documentation": {
              "id": 2899,
              "nodeType": "StructuredDocumentation",
              "src": "755:164:9",
              "text": " @dev\n - Grants `DEFAULT_ADMIN_ROLE` and `MODERATOR_ROLE` to the\n   account that deploys the contract\n - Assigns the bridgeManager address"
            },
            "id": 2921,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2901,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "934:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:23:9"
            },
            "returnParameters": {
              "id": 2903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:9"
            },
            "scope": 3167,
            "src": "922:178:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2941,
              "nodeType": "Block",
              "src": "1311:207:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2929,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "1340:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2930,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "1356:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1356:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2928,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "1332:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1332:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f2061737369676e20537761704d616e616765722061646472657373",
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1377:78:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address\""
                        }
                      ],
                      "id": 2927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1317:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:144:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2935,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:144:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2937,
                        "name": "MODERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1478:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2938,
                        "name": "swapManagerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2924,
                        "src": "1494:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2936,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1467:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:46:9"
                }
              ]
            },
            "documentation": {
              "id": 2922,
              "nodeType": "StructuredDocumentation",
              "src": "1104:136:9",
              "text": " @notice Assigns `MODERATOR_ROLE` to SwapManager contract\n @param  swapManagerAddress The SwapManager contract address"
            },
            "functionSelector": "8d1909ed",
            "id": 2942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignRoleSwapManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "swapManagerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "1274:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:28:9"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:9"
            },
            "scope": 3167,
            "src": "1243:275:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2952,
              "nodeType": "Block",
              "src": "1668:38:9",
              "statements": [
                {
                  "expression": {
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2948,
                      "name": "totalPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2946,
                      "src": "1674:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2949,
                      "name": "totalPodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "1686:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1674:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:27:9"
                }
              ]
            },
            "documentation": {
              "id": 2943,
              "nodeType": "StructuredDocumentation",
              "src": "1522:69:9",
              "text": " @notice Returns the total amount of Pod tokens created"
            },
            "functionSelector": "0fc09e2e",
            "id": 2953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTokenCreated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:2:9"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "totalPods",
                  "nodeType": "VariableDeclaration",
                  "scope": 2953,
                  "src": "1649:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:19:9"
            },
            "scope": 3167,
            "src": "1594:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "1994:52:9",
              "statements": [
                {
                  "expression": {
                    "id": 2965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2961,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2959,
                      "src": "2000:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2962,
                        "name": "podTokenAddressesById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "2013:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 2964,
                      "indexExpression": {
                        "id": 2963,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2956,
                        "src": "2035:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2013:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2000:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2966,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:41:9"
                }
              ]
            },
            "documentation": {
              "id": 2954,
              "nodeType": "StructuredDocumentation",
              "src": "1710:174:9",
              "text": " @notice Returns the contract address of the Pod token\n @param  podId The Pod token identifier\n @return podAddress The contract address of the Pod token"
            },
            "functionSelector": "22b2edeb",
            "id": 2968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPodAddressById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "1914:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1913:23:9"
            },
            "returnParameters": {
              "id": 2960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2959,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "1972:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:20:9"
            },
            "scope": 3167,
            "src": "1887:159:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2982,
              "nodeType": "Block",
              "src": "2355:62:9",
              "statements": [
                {
                  "expression": {
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2976,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "2361:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2977,
                        "name": "podTokenAddressesBySymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "2374:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 2979,
                      "indexExpression": {
                        "id": 2978,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2971,
                        "src": "2400:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2374:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2361:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:51:9"
                }
              ]
            },
            "documentation": {
              "id": 2969,
              "nodeType": "StructuredDocumentation",
              "src": "2050:185:9",
              "text": " @notice Returns the contract address of the Pod token\n @param  tokenSymbol The Pod token symbol (ticker)\n @return podAddress The contract address of the Pod token"
            },
            "functionSelector": "3325a4e4",
            "id": 2983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPodAddressBySymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2971,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "2269:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2268:29:9"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "2333:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:20:9"
            },
            "scope": 3167,
            "src": "2238:179:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "3081:907:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2996,
                            "name": "podTokenAddressesById",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "3275:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 2998,
                          "indexExpression": {
                            "id": 2997,
                            "name": "podId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2986,
                            "src": "3297:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3275:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3315:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3307:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2999,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3307:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3307:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3275:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20506f6420696420616c726561647920657869737473",
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3325:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod id already exists\""
                        },
                        "value": "PRIVIPodERC20Factory: Pod id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod id already exists\""
                        }
                      ],
                      "id": 2995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3260:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:116:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3006,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:116:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3008,
                            "name": "podTokenAddressesBySymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2890,
                            "src": "3397:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 3010,
                          "indexExpression": {
                            "id": 3009,
                            "name": "podTokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "3423:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3397:41:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3450:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3442:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3011,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3442:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3442:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3397:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20506f642073796d626f6c20616c726561647920657869737473",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3460:49:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod symbol already exists\""
                        },
                        "value": "PRIVIPodERC20Factory: Pod symbol already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod symbol already exists\""
                        }
                      ],
                      "id": 3007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3382:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:133:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:133:9"
                },
                {
                  "assignments": [
                    3021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3021,
                      "mutability": "mutable",
                      "name": "podToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 3071,
                      "src": "3522:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                        "typeString": "contract PRIVIPodERC20Token"
                      },
                      "typeName": {
                        "id": 3020,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3019,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6514,
                          "src": "3522:18:9"
                        },
                        "referencedDeclaration": 6514,
                        "src": "3522:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3032,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3025,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3581:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3026,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3595:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3029,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3619:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PRIVIPodERC20Factory_$3167",
                              "typeString": "contract PRIVIPodERC20Factory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PRIVIPodERC20Factory_$3167",
                              "typeString": "contract PRIVIPodERC20Factory"
                            }
                          ],
                          "id": 3028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3611:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3611:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3611:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3558:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PRIVIPodERC20Token_$6514_$",
                        "typeString": "function (string memory,string memory,address) returns (contract PRIVIPodERC20Token)"
                      },
                      "typeName": {
                        "id": 3023,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3022,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6514,
                          "src": "3562:18:9"
                        },
                        "referencedDeclaration": 6514,
                        "src": "3562:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      }
                    },
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3558:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                      "typeString": "contract PRIVIPodERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3522:103:9"
                },
                {
                  "expression": {
                    "id": 3038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3033,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3631:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3036,
                          "name": "podToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3021,
                          "src": "3652:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                            "typeString": "contract PRIVIPodERC20Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                            "typeString": "contract PRIVIPodERC20Token"
                          }
                        ],
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3644:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3644:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3644:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3631:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3039,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:30:9"
                },
                {
                  "expression": {
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3040,
                      "name": "totalPodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "3668:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3687:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3668:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:20:9"
                },
                {
                  "expression": {
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3044,
                        "name": "podTokenAddressesById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "3695:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3046,
                      "indexExpression": {
                        "id": 3045,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2986,
                        "src": "3717:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3695:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3047,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3726:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3695:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:41:9"
                },
                {
                  "expression": {
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3050,
                        "name": "podTokenAddressesBySymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "3742:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3052,
                      "indexExpression": {
                        "id": 3051,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3768:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3742:41:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3053,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3786:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3742:54:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3055,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3060,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3866:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3061,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3886:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3062,
                        "name": "podAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "3908:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3057,
                            "name": "bridgeManagerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "3818:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3056,
                          "name": "IBridgeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5268,
                          "src": "3803:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBridgeManager_$5268_$",
                            "typeString": "type(contract IBridgeManager)"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3803:36:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridgeManager_$5268",
                          "typeString": "contract IBridgeManager"
                        }
                      },
                      "id": 3059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerTokenERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "3803:55:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address) external"
                      }
                    },
                    "id": 3063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:121:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3064,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:121:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3066,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2986,
                        "src": "3947:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3067,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3954:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3068,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3968:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3065,
                      "name": "PodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "3936:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3936:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "EmitStatement",
                  "src": "3931:52:9"
                }
              ]
            },
            "documentation": {
              "id": 2984,
              "nodeType": "StructuredDocumentation",
              "src": "2421:499:9",
              "text": " @notice Creates an ERC20 Pod token and registers it in the BridgeManager\n @dev    - Pod id must not exist\n         - Pod name & symbol must not exist\n         - Pod name & symbol can't be empty\n         - Pod symbol can't be greater than 25 characters\n @param  podId The Pod token identifier\n @param  podTokenName The Pod token name\n @param  podTokenSymbol The Pod token symbol (ticker)\n @return podAddress The contract address of the Pod token created"
            },
            "functionSelector": "416aad1e",
            "id": 3072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2986,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "2947:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2985,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "podTokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "2974:28:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "podTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "3008:30:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:101:9"
            },
            "returnParameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "3061:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:20:9"
            },
            "scope": 3167,
            "src": "2923:1065:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3118,
              "nodeType": "Block",
              "src": "4476:469:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3084,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "4505:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3085,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "4521:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4521:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3083,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "4497:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4497:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e766573746f72",
                        "id": 3088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:71:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        }
                      ],
                      "id": 3082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4482:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4482:137:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3090,
                  "nodeType": "ExpressionStatement",
                  "src": "4482:137:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3092,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3077,
                          "src": "4640:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4659:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4651:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4651:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4651:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4640:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a204163636f756e7420616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4669:58:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: Account address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        }
                      ],
                      "id": 3091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4625:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:108:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3102,
                          "name": "investAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3079,
                          "src": "4754:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4769:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4754:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20696e76657374416d6f756e742073686f756c64206e6f74206265207a65726f",
                        "id": 3105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4778:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: investAmount should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        }
                      ],
                      "id": 3101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4739:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4739:100:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3107,
                  "nodeType": "ExpressionStatement",
                  "src": "4739:100:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3114,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "4907:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3115,
                        "name": "investAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3079,
                        "src": "4922:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 3109,
                              "name": "podTokenAddressesById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2886,
                              "src": "4865:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3111,
                            "indexExpression": {
                              "id": 3110,
                              "name": "podId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3075,
                              "src": "4887:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4865:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3108,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6514,
                          "src": "4846:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PRIVIPodERC20Token_$6514_$",
                            "typeString": "type(contract PRIVIPodERC20Token)"
                          }
                        },
                        "id": 3112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4846:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "4846:53:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:94:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:94:9"
                }
              ]
            },
            "documentation": {
              "id": 3073,
              "nodeType": "StructuredDocumentation",
              "src": "3992:368:9",
              "text": " @notice Mints ERC20 Pod tokens\n @dev    - The caller must MODERATOR_ROLE\n         - `account` address can't be zero\n         - 'investAmount` must be greater than zero\n @param  podId The Pod token identifier\n @param  account The destination account to receive minted tokens\n @param  investAmount The amount of tokens to be minted"
            },
            "functionSelector": "532d9c44",
            "id": 3119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintPodTokenById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3075,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4394:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4421:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3079,
                  "mutability": "mutable",
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4442:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:78:9"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4476:0:9"
            },
            "scope": 3167,
            "src": "4363:582:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3165,
              "nodeType": "Block",
              "src": "5455:479:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3131,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "5484:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3132,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "5500:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5500:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3130,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "5476:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5476:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e766573746f72",
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5521:71:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        }
                      ],
                      "id": 3129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5461:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:137:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:137:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3139,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3124,
                          "src": "5619:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5638:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5630:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5630:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5630:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5619:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a204163636f756e7420616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 3145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5648:58:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: Account address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        }
                      ],
                      "id": 3138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5604:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5604:108:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3147,
                  "nodeType": "ExpressionStatement",
                  "src": "5604:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3149,
                          "name": "investAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3126,
                          "src": "5733:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5748:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5733:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20696e76657374416d6f756e742073686f756c64206e6f74206265207a65726f",
                        "id": 3152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5757:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: investAmount should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        }
                      ],
                      "id": 3148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5718:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:100:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:100:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3124,
                        "src": "5896:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3162,
                        "name": "investAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "5911:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 3156,
                              "name": "podTokenAddressesBySymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2890,
                              "src": "5844:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3158,
                            "indexExpression": {
                              "id": 3157,
                              "name": "tokenSymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3122,
                              "src": "5870:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5844:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3155,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6514,
                          "src": "5825:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PRIVIPodERC20Token_$6514_$",
                            "typeString": "type(contract PRIVIPodERC20Token)"
                          }
                        },
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5825:58:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "id": 3160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "5825:63:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5825:104:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "5825:104:9"
                }
              ]
            },
            "documentation": {
              "id": 3120,
              "nodeType": "StructuredDocumentation",
              "src": "4949:380:9",
              "text": " @notice Mints ERC20 Pod tokens\n @dev    - The caller must MODERATOR_ROLE\n         - `account` address can't be zero\n         - 'investAmount` must be greater than zero\n @param  tokenSymbol The Pod token symbol (sticker)\n @param  account The destination account to receive minted tokens\n @param  investAmount The amount of tokens to be minted"
            },
            "functionSelector": "b176d4ba",
            "id": 3166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintPodTokenBySymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5367:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5400:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5421:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5361:84:9"
            },
            "returnParameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:0:9"
            },
            "scope": 3167,
            "src": "5332:602:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3168,
        "src": "330:5606:9"
      }
    ],
    "src": "32:5905:9"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/PRIVIPodERC20Factory.sol",
    "exportedSymbols": {
      "AccessControl": [
        8171
      ],
      "Context": [
        11538
      ],
      "ERC165": [
        11826
      ],
      "ERC20": [
        10037
      ],
      "ERC20Burnable": [
        10176
      ],
      "IAccessControl": [
        7891
      ],
      "IBridgeManager": [
        5268
      ],
      "IERC165": [
        11838
      ],
      "IERC20": [
        10115
      ],
      "PRIVIPodERC20Factory": [
        3167
      ],
      "PRIVIPodERC20Token": [
        6514
      ]
    },
    "id": 3168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2867,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2868,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 8172,
        "src": "57:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/token/PRIVIPodERC20Token.sol",
        "file": "./token/PRIVIPodERC20Token.sol",
        "id": 2869,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 6515,
        "src": "116:40:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Workspace/PRIVI/PRIVIethereum/contracts/interfaces/IBridgeManager.sol",
        "file": "./interfaces/IBridgeManager.sol",
        "id": 2870,
        "nodeType": "ImportDirective",
        "scope": 3168,
        "sourceUnit": 5269,
        "src": "157:41:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2872,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8171,
              "src": "363:13:9"
            },
            "id": 2873,
            "nodeType": "InheritanceSpecifier",
            "src": "363:13:9"
          }
        ],
        "contractDependencies": [
          6514,
          7891,
          8171,
          11538,
          11826,
          11838
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2871,
          "nodeType": "StructuredDocumentation",
          "src": "200:129:9",
          "text": " @title   PRIVIPodERC20Factory contract\n @dev     Creates new ERC20 tokens using a factory pattern\n @author  PRIVI*"
        },
        "fullyImplemented": true,
        "id": 3167,
        "linearizedBaseContracts": [
          3167,
          8171,
          11826,
          11838,
          7891,
          11538
        ],
        "name": "PRIVIPodERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "797669c9",
            "id": 2878,
            "mutability": "constant",
            "name": "MODERATOR_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "381:68:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2874,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d4f44455241544f525f524f4c45",
                  "id": 2876,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "432:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f",
                    "typeString": "literal_string \"MODERATOR_ROLE\""
                  },
                  "value": "MODERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_71f3d55856e4058ed06ee057d79ada615f65cdf5f9ee88181b914225088f834f",
                    "typeString": "literal_string \"MODERATOR_ROLE\""
                  }
                ],
                "id": 2875,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "422:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2877,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "422:27:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e792b194",
            "id": 2880,
            "mutability": "mutable",
            "name": "bridgeManagerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "453:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2882,
            "mutability": "mutable",
            "name": "totalPodCreated",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "492:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2886,
            "mutability": "mutable",
            "name": "podTokenAddressesById",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "527:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2885,
              "keyType": {
                "id": 2883,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "535:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "527:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2890,
            "mutability": "mutable",
            "name": "podTokenAddressesBySymbol",
            "nodeType": "VariableDeclaration",
            "scope": 3167,
            "src": "587:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2889,
              "keyType": {
                "id": 2887,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "595:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "587:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2888,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "605:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2898,
            "name": "PodCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "674:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "podTokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "700:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2893,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "podTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "725:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2895,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "725:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:82:9"
            },
            "src": "652:99:9"
          },
          {
            "body": {
              "id": 2920,
              "nodeType": "Block",
              "src": "957:143:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2905,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7913,
                        "src": "974:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11526,
                          "src": "994:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "994:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2904,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "963:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2909,
                  "nodeType": "ExpressionStatement",
                  "src": "963:44:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2911,
                        "name": "MODERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1024:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2912,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11526,
                          "src": "1040:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1040:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2910,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1013:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:40:9"
                },
                {
                  "expression": {
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2916,
                      "name": "bridgeManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "1059:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2917,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2901,
                      "src": "1082:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1059:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:36:9"
                }
              ]
            },
            "documentation": {
              "id": 2899,
              "nodeType": "StructuredDocumentation",
              "src": "755:164:9",
              "text": " @dev\n - Grants `DEFAULT_ADMIN_ROLE` and `MODERATOR_ROLE` to the\n   account that deploys the contract\n - Assigns the bridgeManager address"
            },
            "id": 2921,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2901,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2921,
                  "src": "934:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:23:9"
            },
            "returnParameters": {
              "id": 2903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "957:0:9"
            },
            "scope": 3167,
            "src": "922:178:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2941,
              "nodeType": "Block",
              "src": "1311:207:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2929,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "1340:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2930,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "1356:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1356:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2928,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "1332:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1332:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f2061737369676e20537761704d616e616765722061646472657373",
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1377:78:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e947ccff79a7028480ae87dafb51f55b78924b9e84069073f01c88cbe7f2fd4",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to assign SwapManager address\""
                        }
                      ],
                      "id": 2927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1317:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:144:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2935,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:144:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2937,
                        "name": "MODERATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1478:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2938,
                        "name": "swapManagerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2924,
                        "src": "1494:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2936,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1467:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:46:9"
                }
              ]
            },
            "documentation": {
              "id": 2922,
              "nodeType": "StructuredDocumentation",
              "src": "1104:136:9",
              "text": " @notice Assigns `MODERATOR_ROLE` to SwapManager contract\n @param  swapManagerAddress The SwapManager contract address"
            },
            "functionSelector": "8d1909ed",
            "id": 2942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignRoleSwapManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "swapManagerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "1274:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:28:9"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:9"
            },
            "scope": 3167,
            "src": "1243:275:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2952,
              "nodeType": "Block",
              "src": "1668:38:9",
              "statements": [
                {
                  "expression": {
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2948,
                      "name": "totalPods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2946,
                      "src": "1674:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2949,
                      "name": "totalPodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "1686:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1674:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:27:9"
                }
              ]
            },
            "documentation": {
              "id": 2943,
              "nodeType": "StructuredDocumentation",
              "src": "1522:69:9",
              "text": " @notice Returns the total amount of Pod tokens created"
            },
            "functionSelector": "0fc09e2e",
            "id": 2953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTokenCreated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:2:9"
            },
            "returnParameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "totalPods",
                  "nodeType": "VariableDeclaration",
                  "scope": 2953,
                  "src": "1649:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:19:9"
            },
            "scope": 3167,
            "src": "1594:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "1994:52:9",
              "statements": [
                {
                  "expression": {
                    "id": 2965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2961,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2959,
                      "src": "2000:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2962,
                        "name": "podTokenAddressesById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "2013:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 2964,
                      "indexExpression": {
                        "id": 2963,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2956,
                        "src": "2035:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2013:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2000:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2966,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:41:9"
                }
              ]
            },
            "documentation": {
              "id": 2954,
              "nodeType": "StructuredDocumentation",
              "src": "1710:174:9",
              "text": " @notice Returns the contract address of the Pod token\n @param  podId The Pod token identifier\n @return podAddress The contract address of the Pod token"
            },
            "functionSelector": "22b2edeb",
            "id": 2968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPodAddressById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "1914:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1913:23:9"
            },
            "returnParameters": {
              "id": 2960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2959,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "1972:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:20:9"
            },
            "scope": 3167,
            "src": "1887:159:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2982,
              "nodeType": "Block",
              "src": "2355:62:9",
              "statements": [
                {
                  "expression": {
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2976,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "2361:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2977,
                        "name": "podTokenAddressesBySymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "2374:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 2979,
                      "indexExpression": {
                        "id": 2978,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2971,
                        "src": "2400:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2374:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2361:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:51:9"
                }
              ]
            },
            "documentation": {
              "id": 2969,
              "nodeType": "StructuredDocumentation",
              "src": "2050:185:9",
              "text": " @notice Returns the contract address of the Pod token\n @param  tokenSymbol The Pod token symbol (ticker)\n @return podAddress The contract address of the Pod token"
            },
            "functionSelector": "3325a4e4",
            "id": 2983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPodAddressBySymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2971,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "2269:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2970,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2268:29:9"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2983,
                  "src": "2333:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:20:9"
            },
            "scope": 3167,
            "src": "2238:179:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "3081:907:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2996,
                            "name": "podTokenAddressesById",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2886,
                            "src": "3275:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 2998,
                          "indexExpression": {
                            "id": 2997,
                            "name": "podId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2986,
                            "src": "3297:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3275:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3315:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3307:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2999,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3307:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3307:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3275:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20506f6420696420616c726561647920657869737473",
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3325:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod id already exists\""
                        },
                        "value": "PRIVIPodERC20Factory: Pod id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7d583a5576535c24b92906070ce52ddd065812a7f2b5f23941c84a389c3dffa",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod id already exists\""
                        }
                      ],
                      "id": 2995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3260:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:116:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3006,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:116:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3008,
                            "name": "podTokenAddressesBySymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2890,
                            "src": "3397:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 3010,
                          "indexExpression": {
                            "id": 3009,
                            "name": "podTokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "3423:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3397:41:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3450:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3442:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3011,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3442:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3442:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3397:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20506f642073796d626f6c20616c726561647920657869737473",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3460:49:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod symbol already exists\""
                        },
                        "value": "PRIVIPodERC20Factory: Pod symbol already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae6b9643f6990bd10417769e7cf44c1683e487309bc347c2b48727f34e29ec96",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Pod symbol already exists\""
                        }
                      ],
                      "id": 3007,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3382:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:133:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:133:9"
                },
                {
                  "assignments": [
                    3021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3021,
                      "mutability": "mutable",
                      "name": "podToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 3071,
                      "src": "3522:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                        "typeString": "contract PRIVIPodERC20Token"
                      },
                      "typeName": {
                        "id": 3020,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3019,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6514,
                          "src": "3522:18:9"
                        },
                        "referencedDeclaration": 6514,
                        "src": "3522:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3032,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3025,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3581:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3026,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3595:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3029,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3619:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PRIVIPodERC20Factory_$3167",
                              "typeString": "contract PRIVIPodERC20Factory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PRIVIPodERC20Factory_$3167",
                              "typeString": "contract PRIVIPodERC20Factory"
                            }
                          ],
                          "id": 3028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3611:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3611:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3611:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3558:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_PRIVIPodERC20Token_$6514_$",
                        "typeString": "function (string memory,string memory,address) returns (contract PRIVIPodERC20Token)"
                      },
                      "typeName": {
                        "id": 3023,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3022,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6514,
                          "src": "3562:18:9"
                        },
                        "referencedDeclaration": 6514,
                        "src": "3562:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      }
                    },
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3558:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                      "typeString": "contract PRIVIPodERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3522:103:9"
                },
                {
                  "expression": {
                    "id": 3038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3033,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3631:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3036,
                          "name": "podToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3021,
                          "src": "3652:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                            "typeString": "contract PRIVIPodERC20Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                            "typeString": "contract PRIVIPodERC20Token"
                          }
                        ],
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3644:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3644:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3644:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3631:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3039,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:30:9"
                },
                {
                  "expression": {
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3040,
                      "name": "totalPodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "3668:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3687:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3668:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3043,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:20:9"
                },
                {
                  "expression": {
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3044,
                        "name": "podTokenAddressesById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "3695:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3046,
                      "indexExpression": {
                        "id": 3045,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2986,
                        "src": "3717:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3695:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3047,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3726:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3695:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "3695:41:9"
                },
                {
                  "expression": {
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3050,
                        "name": "podTokenAddressesBySymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "3742:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3052,
                      "indexExpression": {
                        "id": 3051,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3768:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3742:41:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3053,
                      "name": "podAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2993,
                      "src": "3786:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3742:54:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3055,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3060,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3866:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3061,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3886:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3062,
                        "name": "podAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2993,
                        "src": "3908:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3057,
                            "name": "bridgeManagerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "3818:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3056,
                          "name": "IBridgeManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5268,
                          "src": "3803:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBridgeManager_$5268_$",
                            "typeString": "type(contract IBridgeManager)"
                          }
                        },
                        "id": 3058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3803:36:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBridgeManager_$5268",
                          "typeString": "contract IBridgeManager"
                        }
                      },
                      "id": 3059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerTokenERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5247,
                      "src": "3803:55:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address) external"
                      }
                    },
                    "id": 3063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:121:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3064,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:121:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3066,
                        "name": "podId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2986,
                        "src": "3947:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3067,
                        "name": "podTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3954:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3068,
                        "name": "podTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "3968:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3065,
                      "name": "PodCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "3936:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3936:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "EmitStatement",
                  "src": "3931:52:9"
                }
              ]
            },
            "documentation": {
              "id": 2984,
              "nodeType": "StructuredDocumentation",
              "src": "2421:499:9",
              "text": " @notice Creates an ERC20 Pod token and registers it in the BridgeManager\n @dev    - Pod id must not exist\n         - Pod name & symbol must not exist\n         - Pod name & symbol can't be empty\n         - Pod symbol can't be greater than 25 characters\n @param  podId The Pod token identifier\n @param  podTokenName The Pod token name\n @param  podTokenSymbol The Pod token symbol (ticker)\n @return podAddress The contract address of the Pod token created"
            },
            "functionSelector": "416aad1e",
            "id": 3072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2986,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "2947:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2985,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2947:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "podTokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "2974:28:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "podTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "3008:30:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:101:9"
            },
            "returnParameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "podAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "3061:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:20:9"
            },
            "scope": 3167,
            "src": "2923:1065:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3118,
              "nodeType": "Block",
              "src": "4476:469:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3084,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "4505:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3085,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "4521:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4521:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3083,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "4497:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4497:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e766573746f72",
                        "id": 3088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:71:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        }
                      ],
                      "id": 3082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4482:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4482:137:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3090,
                  "nodeType": "ExpressionStatement",
                  "src": "4482:137:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3092,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3077,
                          "src": "4640:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4659:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4651:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4651:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4651:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4640:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a204163636f756e7420616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4669:58:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: Account address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        }
                      ],
                      "id": 3091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4625:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:108:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3102,
                          "name": "investAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3079,
                          "src": "4754:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4769:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4754:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20696e76657374416d6f756e742073686f756c64206e6f74206265207a65726f",
                        "id": 3105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4778:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: investAmount should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        }
                      ],
                      "id": 3101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4739:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4739:100:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3107,
                  "nodeType": "ExpressionStatement",
                  "src": "4739:100:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3114,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "4907:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3115,
                        "name": "investAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3079,
                        "src": "4922:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 3109,
                              "name": "podTokenAddressesById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2886,
                              "src": "4865:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3111,
                            "indexExpression": {
                              "id": 3110,
                              "name": "podId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3075,
                              "src": "4887:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4865:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3108,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6514,
                          "src": "4846:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PRIVIPodERC20Token_$6514_$",
                            "typeString": "type(contract PRIVIPodERC20Token)"
                          }
                        },
                        "id": 3112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4846:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "id": 3113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "4846:53:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:94:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:94:9"
                }
              ]
            },
            "documentation": {
              "id": 3073,
              "nodeType": "StructuredDocumentation",
              "src": "3992:368:9",
              "text": " @notice Mints ERC20 Pod tokens\n @dev    - The caller must MODERATOR_ROLE\n         - `account` address can't be zero\n         - 'investAmount` must be greater than zero\n @param  podId The Pod token identifier\n @param  account The destination account to receive minted tokens\n @param  investAmount The amount of tokens to be minted"
            },
            "functionSelector": "532d9c44",
            "id": 3119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintPodTokenById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3075,
                  "mutability": "mutable",
                  "name": "podId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4394:21:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4421:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3079,
                  "mutability": "mutable",
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "4442:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:78:9"
            },
            "returnParameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4476:0:9"
            },
            "scope": 3167,
            "src": "4363:582:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3165,
              "nodeType": "Block",
              "src": "5455:479:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3131,
                            "name": "MODERATOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2878,
                            "src": "5484:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3132,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11526,
                              "src": "5500:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5500:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3130,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7981,
                          "src": "5476:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5476:37:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a206d7573742068617665204d4f44455241544f525f524f4c4520746f20696e7665737420666f7220696e766573746f72",
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5521:71:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        },
                        "value": "PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d6b532af06d72bf5b3a4c36ad04a82593335d9f000eade86b3b354351418cc",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: must have MODERATOR_ROLE to invest for investor\""
                        }
                      ],
                      "id": 3129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5461:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:137:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "5461:137:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3139,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3124,
                          "src": "5619:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5638:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5630:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5630:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5630:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5619:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a204163636f756e7420616464726573732073686f756c64206e6f74206265207a65726f",
                        "id": 3145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5648:58:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: Account address should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3ca8768de5e3a1d0fb62643ac019528416d012ff41ecd4c659ade6688537a8e",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: Account address should not be zero\""
                        }
                      ],
                      "id": 3138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5604:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5604:108:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3147,
                  "nodeType": "ExpressionStatement",
                  "src": "5604:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3149,
                          "name": "investAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3126,
                          "src": "5733:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5748:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5733:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5052495649506f644552433230466163746f72793a20696e76657374416d6f756e742073686f756c64206e6f74206265207a65726f",
                        "id": 3152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5757:55:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        },
                        "value": "PRIVIPodERC20Factory: investAmount should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37f6624a12c6cd188baa3b9e5312eb528527524aabad1c5648fcf3d143a1a554",
                          "typeString": "literal_string \"PRIVIPodERC20Factory: investAmount should not be zero\""
                        }
                      ],
                      "id": 3148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5718:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:100:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:100:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3161,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3124,
                        "src": "5896:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3162,
                        "name": "investAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "5911:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 3156,
                              "name": "podTokenAddressesBySymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2890,
                              "src": "5844:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3158,
                            "indexExpression": {
                              "id": 3157,
                              "name": "tokenSymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3122,
                              "src": "5870:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5844:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3155,
                          "name": "PRIVIPodERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6514,
                          "src": "5825:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PRIVIPodERC20Token_$6514_$",
                            "typeString": "type(contract PRIVIPodERC20Token)"
                          }
                        },
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5825:58:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PRIVIPodERC20Token_$6514",
                          "typeString": "contract PRIVIPodERC20Token"
                        }
                      },
                      "id": 3160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6493,
                      "src": "5825:63:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5825:104:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "5825:104:9"
                }
              ]
            },
            "documentation": {
              "id": 3120,
              "nodeType": "StructuredDocumentation",
              "src": "4949:380:9",
              "text": " @notice Mints ERC20 Pod tokens\n @dev    - The caller must MODERATOR_ROLE\n         - `account` address can't be zero\n         - 'investAmount` must be greater than zero\n @param  tokenSymbol The Pod token symbol (sticker)\n @param  account The destination account to receive minted tokens\n @param  investAmount The amount of tokens to be minted"
            },
            "functionSelector": "b176d4ba",
            "id": 3166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintPodTokenBySymbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5367:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5400:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "investAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3166,
                  "src": "5421:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5361:84:9"
            },
            "returnParameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:0:9"
            },
            "scope": 3167,
            "src": "5332:602:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3168,
        "src": "330:5606:9"
      }
    ],
    "src": "32:5905:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xc0512f6474c9ee949f1cbdc88e43ca774f79b5f1f07d8484696e1cf1a0bd87ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "podId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenSymbol",
              "type": "string"
            }
          ],
          "name": "PodCreated",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x303a102a42BCFaF040312d805611351286Bc5ebd",
      "transactionHash": "0x8f8b2cadac2cf4355a76d3244e1c423223b3e9d849fe499642f64631fe650eb2"
    },
    "4": {
      "events": {
        "0xc0512f6474c9ee949f1cbdc88e43ca774f79b5f1f07d8484696e1cf1a0bd87ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "podId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenSymbol",
              "type": "string"
            }
          ],
          "name": "PodCreated",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0C7181e7ecAAD5F54a9682d2d4458B81F7aF3b57",
      "transactionHash": "0xfeb72d6695d530909c9794e2c922741c5953b14ecd98ab2444f6bc24e745925b"
    },
    "97": {
      "events": {
        "0xc0512f6474c9ee949f1cbdc88e43ca774f79b5f1f07d8484696e1cf1a0bd87ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "podId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "podTokenSymbol",
              "type": "string"
            }
          ],
          "name": "PodCreated",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xFc3480523B5EBc4be7f050b934CBc90D2ff120Bf",
      "transactionHash": "0x9f32520cd1addb5a7fc87e88fd9a442e0c5903dd9143923ea6b3bf215ead0138"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-21T22:08:26.595Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "PRIVI*",
    "details": "Creates new ERC20 tokens using a factory pattern",
    "kind": "dev",
    "methods": {
      "assignRoleSwapManager(address)": {
        "params": {
          "swapManagerAddress": "The SwapManager contract address"
        }
      },
      "constructor": {
        "details": "- Grants `DEFAULT_ADMIN_ROLE` and `MODERATOR_ROLE` to the   account that deploys the contract - Assigns the bridgeManager address"
      },
      "createPod(string,string,string)": {
        "details": "- Pod id must not exist         - Pod name & symbol must not exist         - Pod name & symbol can't be empty         - Pod symbol can't be greater than 25 characters",
        "params": {
          "podId": "The Pod token identifier",
          "podTokenName": "The Pod token name",
          "podTokenSymbol": "The Pod token symbol (ticker)"
        },
        "returns": {
          "podAddress": "The contract address of the Pod token created"
        }
      },
      "getPodAddressById(string)": {
        "params": {
          "podId": "The Pod token identifier"
        },
        "returns": {
          "podAddress": "The contract address of the Pod token"
        }
      },
      "getPodAddressBySymbol(string)": {
        "params": {
          "tokenSymbol": "The Pod token symbol (ticker)"
        },
        "returns": {
          "podAddress": "The contract address of the Pod token"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "mintPodTokenById(string,address,uint256)": {
        "details": "- The caller must MODERATOR_ROLE         - `account` address can't be zero         - 'investAmount` must be greater than zero",
        "params": {
          "account": "The destination account to receive minted tokens",
          "investAmount": "The amount of tokens to be minted",
          "podId": "The Pod token identifier"
        }
      },
      "mintPodTokenBySymbol(string,address,uint256)": {
        "details": "- The caller must MODERATOR_ROLE         - `account` address can't be zero         - 'investAmount` must be greater than zero",
        "params": {
          "account": "The destination account to receive minted tokens",
          "investAmount": "The amount of tokens to be minted",
          "tokenSymbol": "The Pod token symbol (sticker)"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "title": "PRIVIPodERC20Factory contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assignRoleSwapManager(address)": {
        "notice": "Assigns `MODERATOR_ROLE` to SwapManager contract"
      },
      "createPod(string,string,string)": {
        "notice": "Creates an ERC20 Pod token and registers it in the BridgeManager"
      },
      "getPodAddressById(string)": {
        "notice": "Returns the contract address of the Pod token"
      },
      "getPodAddressBySymbol(string)": {
        "notice": "Returns the contract address of the Pod token"
      },
      "getTotalTokenCreated()": {
        "notice": "Returns the total amount of Pod tokens created"
      },
      "mintPodTokenById(string,address,uint256)": {
        "notice": "Mints ERC20 Pod tokens"
      },
      "mintPodTokenBySymbol(string,address,uint256)": {
        "notice": "Mints ERC20 Pod tokens"
      }
    },
    "version": 1
  }
}